@model DetailsIndividualModel

@{

    Layout = null;
}


<div class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title">Individual User Details</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            
            <div class="modal-body">
                <div class="form-container">
                    <div class="form-inline mb-2">
                        <div class="custom-control custom-radio">
                            @Html.RadioButtonFor(m => m.IsMalaysian, "true", new { @class = "custom-control-input", id = "yes", @disabled = "disabled" })
                            <label class="custom-control-label mr-3" for="yes">@Language.Auth.FieldMalaysian</label>
                        </div>
                        <div class="custom-control custom-radio ml-5">
                            @Html.RadioButtonFor(m => m.IsMalaysian, "false", new { @class = "custom-control-input", id = "no", @disabled = "disabled" })
                            <label class="custom-control-label" for="no">@Language.Auth.FieldNonMalaysian</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12 @if (Model.IsMalaysian) { <text>d-none</text> }">
                            @Html.FEPLabelFor(m => m.Citizenship, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.Citizenship.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.Name)
                            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row @if (!Model.IsMalaysian) { <text>d-none</text> }">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.ICNo, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.ICNo, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderICNo } })
                        </div>
                    </div>
                    <div class="row @if (Model.IsMalaysian) { <text>d-none</text> }">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.PassportNo, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.PassportNo, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderPassportNo } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.Address1, htmlAttributes: new { @class = "form-label" })
                        <div class="row">
                            <div class="col">
                                <div class="input-group mb-3">
                                    @Html.EditorFor(m => m.Address1, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderAddress1 } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="input-group mb-3">
                                    @Html.EditorFor(m => m.Address2, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderAddress2 } })
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col @if (!Model.IsMalaysian) { <text>d-none</text> }">
                                @Html.EditorFor(m => m.PostCodeMalaysian, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderPostCode } })
                            </div>
                            <div class="col @if (Model.IsMalaysian) { <text>d-none</text> }">
                                @Html.EditorFor(m => m.PostCodeNonMalaysian, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderPostCode } })
                            </div>
                            <div class="col">
                                @Html.EditorFor(m => m.City, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderCity } })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-12">
                                <div class="input-group">
                                    @Html.EditorFor(m => m.State.Name, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderStateId } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="input-group">
                                    @Html.EditorFor(m => m.Country.Name, new { htmlAttributes = new { @class = "form-control form-control-prepended", @readonly = "readonly", placeholder = Language.Auth.PlaceholderCountryId } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.MobileNo)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="countrycode">@Html.Raw(Model.CountryCode)</span>
                                </div>
                                @Html.EditorFor(m => m.MobileNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.Email)
                            @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.Roles)
                            <div class="input-group">
                                @foreach (var role in Model.Roles)
                                {
                                    <span class="badge badge-pill badge-primary ml-1" data-toggle="tooltip" title="@role.Description">@role.Name</span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(m => m.Status)
                            <div>
                                @if (Model.Status)
                                {
                                    <span class='color-green font-weight-bold'>Active</span>
                                }
                                else
                                {
                                    <span class='color-grey font-weight-bold'>Disable</span>
                                }
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

