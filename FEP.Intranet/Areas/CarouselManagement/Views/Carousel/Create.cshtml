@model FEP.WebApiModel.Carousel.CreateCarouselModel

@{
    ViewBag.Title = "Create Carousel";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentStyle {

    <link href="~/Scripts/summernote/summernote-lite.css" rel="stylesheet" />

    <style>

        .photo {
            border: 1px solid #ddd; /* Gray border */
            border-radius: 4px; /* Rounded border */
            padding: 5px; /* Some padding */
            width: 250px; /* Set a small width */
        }

            .photo:hover {
                box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
            }
    </style>
}

@section ContentScript {
    <script src="~/Scripts/summernote/summernote-lite.min.js"></script>
    <script type="text/javascript">

        RefreshFile1();

        $(document).ready(function () {
            var initMarkup = $('#FreeTextArea').val();

            $('.summernote').summernote({
                placeholder: 'Type your text here.',
                tabsize: 2,
                height: 300,
            });

            $('#summernote').summernote('code', initMarkup);

            $("#btnSubmit").click(function (e) {
                $('#FreeTextArea').val($('.summernote').summernote('code'));
            });
        });

        $("#DisplayDate").flatpickr({
            dateFormat: "d/m/Y",
            minDate: new Date(),
        });
    </script>
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <div class="header-col-right float-right mt-5"><a href="@Url.Action("Index", "Carousel", new { area = "CarouselManagement"})" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> @Language.General.ButtonBack</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { area = ""})">@Language.Carousel.BreadcrumbHome</a></li>
                                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Carousel", new { area = "CarouselManagement"})">@Language.Carousel.BreadcrumbManagement</a></li>
                                <li class="breadcrumb-item"><a href="#">@Language.Carousel.BreadcrumbCreate</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">@Language.Carousel.HeadingDetailsCreate</h1>
                    <div class="header-text">@Language.Carousel.HeadingDescriptionCreate</div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "target" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-xl-3 col-md-3 col-sm-4 my-2">
            <div class="sidebar-left">
                <div class="sidebar-inner sticky">
                    <ul class="steps steps-vertical">
                        <li class="step-item active">
                            <a href="" class="step-link">
                                <span class="step-number">1</span>
                                <span class="step-title">@Language.Carousel.SideBarStepCreate</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
            <div class="border-form rounded-top">
                <div class="form-container">
                    <div class="mt-2 mb-4 pb-1">
                        <h4 class="color-darkblue mb-0">@Language.Carousel.HeadingDetails</h4>
                        <h6 class="font-weight-normal">@Language.Carousel.MandatoryPrefix (<span class="text-danger">*</span>) @Language.Carousel.MandatorySuffix</h6>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @name = "FreeTextArea", @placeholder = "Description of Carousel" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.CoverPictures, htmlAttributes: new { @class = "control-label" })
                            @Html.Partial("_CoverPicture", Model.CoverPictures)
                            @Html.ValidationMessageFor(model => model.CoverPictures, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Display, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Display)
                                    @Html.ValidationMessageFor(model => model.Display, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.DisplayDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DisplayDate, new { htmlAttributes = new { @id="DisplayDate", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DisplayDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(model => model.TextLocation)
                            @Html.EnumDropDownListFor(model => model.TextLocation, htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.TextLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="editor" class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(model => model.FreeTextArea)
                            @Html.TextAreaFor(model => model.FreeTextArea, new { @class = "summernote form-control textarea-editor", @name = "FreeTextArea" })
                            @Html.ValidationMessageFor(model => model.FreeTextArea, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.HiddenFor(model => model.CreatedBy, new { Value = CurrentUser.UserId })
                </div>
            </div>
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <a class="btn btn-default" href="@Url.Action("Index", "Carousel", new { area = "CarouselManagement" })" data-toggle="tooltip" data-placement="top" title="Back">@Language.General.ButtonBack</a>
                <button type="submit" class="btn btn-secondary" id="btnSubmit" name="Submittype" value="Submit">@Language.General.ButtonSubmit</button>
            </div>
        </div>
    </div>

}

