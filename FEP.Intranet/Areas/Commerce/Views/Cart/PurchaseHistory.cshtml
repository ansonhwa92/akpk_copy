@model FEP.WebApiModel.RnP.ListPurchaseHistoryModel

@{
    ViewBag.Title = "Purchase History";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Purchase History</h1>
                    <div class="header-text">View the list of your previous purchases.</div>
                </div>
            </div>
        </div>
    </div>
}

<div class="d-flex align-items-center">
    <div class="filter dropdown">
        <button class="btn btn-default btn-rounded color-grey font-weight-normal cycle-element"><i class="la la-sliders font-icon color-secondary"></i>Filters</button>
        <div class="dropdown-menu">
            <div class="filter-head">Filters</div>
            <div class="filter-body">
                <div>@Html.DisplayNameFor(m => m.Filters.Description)</div>
                <div class="sorting-wrap">
                    <div class="sorting-dropdown">
                        @Html.EditorFor(m => m.Filters.Description, new { htmlAttributes = new { @class = "form-control small" } })
                    </div>
                </div>
                <div>@Html.DisplayNameFor(m => m.Filters.ReceiptNo)</div>
                <div class="sorting-wrap">
                    <div class="sorting-dropdown">
                        @Html.EditorFor(m => m.Filters.ReceiptNo, new { htmlAttributes = new { @class = "form-control small" } })
                    </div>
                </div>
                <div>
                    <button id="btnSearch" class="btn btn-secondary">Search</button>
                </div>
            </div>
        </div>
    </div>
    <div class="divider-vertical">&nbsp;</div>
    <!-- Search -->
    <div class="input-keyword col-lg-5 col-sm-12 mr-auto px-0">
        <input id="quickSearch" type="text" class="form-control form-control-rounded" placeholder="Search" name="keyword">
        <div class="input-group-append">
            <button id="quickSearchBtn" class="btn btn-circle" type="button"><i class="fas fa-search text-white"></i></button>
        </div>
    </div>
</div>
<hr>
<div class="table-responsive" data-toggle="lists">
    <div class="d-flex pb-4 align-items-center">
        <div>
            <!-- Select option -->
            <span class="select-arrow">
                <select id="lengthChange" name="dataTable_length" aria-controls="dataTable" class="custom-select">
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
            </span>
        </div>
        <div id="pageInfo" class="showing-result px-3 py-2 mr-auto"></div>
    </div>
    <!-- Table -->
    <table class="table tableStyle1 tabledata">
        <thead>
            <tr>
                <th>#</th>
                <th>@Html.DisplayNameFor(model => model.Purchases.ReceiptNo)</th>
                <th>@Html.DisplayNameFor(model => model.Purchases.PaymentDate)</th>
                <th>@Html.DisplayNameFor(model => model.Purchases.ItemCount)</th>
                <th>@Html.DisplayNameFor(model => model.Purchases.Status)</th>
                <th>@Html.DisplayNameFor(model => model.Purchases.DeliveryStatus)</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
    </table>
</div>

@section ContentScript{

    <script type="text/javascript">
        $(document).ready(function () {
            var table = $('.tabledata').DataTable({
                serverSide: true,
                processing: true,
                ajax: {
                    "type": "post",
                    "url": '@(WebApiURL)Commerce/Cart/PurchaseHistory?userid=@CurrentUser.UserId',
                    "data": function (filter) {
                        filter.Description = $('#Filters_Description').val();
                        filter.ReceiptNo = $('#Filters_ReceiptNo').val();
                    },
                    dataFilter: function (res) {
                        // do what you need to the data before it loads to the table
                        // for debugging only for now
                        return res;
                    },
                    error: function (x, y) {
                        console.log(x);
                    }
                },
                columns: [
                    {
                        sortable: false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        data: 'ReceiptNo',
                        sortable: true
                    },
                    /*
                    {
                        data: 'TotalPrice',
                        sortable: false
                        render: function (data, type, row, meta) {
                            return row.TotalPrice.toFixed(2);
                        }
                    },
                    */
                    {
                        data: 'PaymentDate',
                        sortable: true,
                        render: function (data, type, row, meta) {
                            if (row.PaymentDate == null) {
                                return "<span class='color-grey font-weight-bold'>&nbsp;</span>";
                            }
                            else {
                                return "<span class='color-grey font-weight-bold'>" + row.PaymentDate.substr(8, 2) + "/" + row.PaymentDate.substr(5, 2) + "/" + row.PaymentDate.substr(0,4) + "</span>";
                            }
                        }
                    },
                    {
                        data: 'ItemCount',
                        sortable: false
                    },
                    {
                        data: 'Status',
                        sortable: true,
                        render: function (data, type, row, meta) {
                            if (row.Status == 0) {
                                return "<span class='color-grey font-weight-bold'>Shopping</span>";
                            }
                            else if (row.Status == 1) {
                                return "<span class='color-grey font-weight-bold'>Checked Out</span>";
                            }
                            else if (row.Status == 2) {
                                return "<span class='color-green font-weight-bold'>Paid</span>";
                            }
                        }
                    },
                    {
                        data: 'DeliveryStatus',
                        sortable: true,
                        render: function (data, type, row, meta) {
                            if (row.DeliveryStatus == 0) {
                                return "<span class='color-grey font-weight-bold'>N/A</span>";
                            }
                            else if (row.DeliveryStatus == 1) {
                                return "<span class='color-grey font-weight-bold'>Preparing</span>";
                            }
                            else if (row.DeliveryStatus == 2) {
                                return "<span class='color-green font-weight-bold'>Shipped</span>";
                            }
                            else if (row.DeliveryStatus == 3) {
                                return "<span class='color-green font-weight-bold'>Delivered</span>";
                            }
                        }
                    },
                    {
                        sortable: false,
                        render: function (data, type, row, meta) {

                            var action = '<div class="icon-action">';
                            action += '<button class="btn btn-secondary btnView" id="btnView" data-cartid="' + row.Id + '" data-toggle="tooltip" data-placement="top" title="View Purchase Details">View Details</button>';
                            action += '</div>';

                            return action;
                        }
                    }
                ],
                paging: true,
                lengthChange: true,
                searching: true,
                ordering: true,
                orderMulti: false,
                info: true,
                autoWidth: false,
                order: [[1, 'asc']],
                language: {
                    processing: "Processing... <i class='fa fa-refresh fa-spin'></i>",
                    emptyTable: "No Record Found",
                    info: "Showing _START_ - _END_ of _TOTAL_ purchases"
                },
                dom: 'rtip'
            });

            $('#lengthChange').val(table.page.len());

            $('#quickSearch').keyup(function () {
                table.search($(this).val()).draw();
            });

            $('#quickSearchBtn').click(function () {
                table.search($(this).val()).draw();
            });

            $('#lengthChange').change(function () {
                table.page.len($(this).val()).draw();
            });

            $('#btnSearch').click(function () {
                table.ajax.reload();
            });

            table.on('order.dt search.dt', function () {
                var info = table.page.info();
                $('#pageInfo').html('Showing ' + (info.start + 1) + ' - ' + info.end + ' of ' + info.recordsTotal + ' purchases');
                $('[data-toggle="tooltip"]').tooltip({ trigger: 'hover' });
            }).draw();

            //$('#btnRefund').click(function () {
            $(document).on('click', '.btn.btn-secondary.btnView', function () {
                var cartid = $(this).data("cartid");
                var myurl = '@Url.Action("PurchaseDetails", "Cart", new { area = "Commerce" })' + '?cartid=' + cartid;
                window.location = myurl;
            });

        });

    </script>

}


