@model FEP.WebApiModel.Reward.CreateRewardRedemptionModel
@{
    ViewBag.Title = "Create Reward Redemption Settings";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav {

    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                @*<div class="header-col-right float-right mt-5"><a href="e-Learning.html" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>*@
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { area = "" })">Home</a></li>
                                <li class="breadcrumb-item"><a href="javascript:void(0)">Reward</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Create Reward Redemption Settings</h1>
                    @*<div class="header-text">List of registered user as individual</div>*@
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="col-xl-3 col-md-3 col-sm-4 my-2">
        <div id="page-nav" class="sidebar-left page-nav">
            <div data-perfect-scrollbar class="ps">
                <div class="page-section">
                    <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i> Reward Redemption Settings</h6>
                    <ul class="nav page-nav__menu">
                        <li class="nav-item">
                            <a href="@Url.Action("Create", "RewardActivityPoints", new { area = "Reward"})" class="active nav-link">Create Activity Points</a>
                        </li>

                    </ul>
                </div>

            </div>
        </div>
    </div>

    <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="border-form rounded">
                <div class="form-container form-container-w100">
                    <div class="mb-4 mt-2">
                        <h4 class="color-darkblue mb-0">Create : New Reward Redemption Settings</h4>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="form-group col-lg-12">
                            <label>@Html.DisplayNameFor(model => model.RewardCode)</label>
                            <div class="col-lg-12 pl-0">
                                @Html.EditorFor(model => model.RewardCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RewardCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12 pl-0">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.PointsToRedeem, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12 pl-0">
                            @Html.EditorFor(model => model.PointsToRedeem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PointsToRedeem, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ValidDuration, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12 pl-0">
                            @Html.EditorFor(model => model.ValidDuration, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ValidDuration, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    

                    @Html.HiddenFor(model => model.CreatedBy)

                </div>
                <div class="p-3 rounded-bottom">
                    <a class="btn btn-default font-weight-normal mr-2" href="@Url.Action("List")">Cancel</a>
                    <button type="submit" class="btn btn-secondary mr-2">Create Reward Redemption</button>
                </div>
            </div>

        }
    </div>

</div>

