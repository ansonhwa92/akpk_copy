@model FEP.Model.Publication

@{
    ViewBag.Title = "Delete Publication";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href="~/RnP/Publication" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/RnP/Home">Research & Publication</a></li>
                                <li class="breadcrumb-item"><a href="~/RnP/Publication">Publication</a></li>
                                <li class="breadcrumb-item"><a href="#">Delete Publication</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Delete Publication</h1>
                    <div class="header-text">Delete newly-created publication that has not been submitted for approval.</div>
                </div>
            </div>
        </div>
    </div>
}

<h3>Are you sure you want to delete this Publication?</h3>
<div class="row">
    <div class="col-xl-3 col-md-3 col-sm-4 my-2">
        <div class="sidebar-left">
            <!-- Steps -->
            <div class="sidebar-inner sticky">
                <ul class="steps steps-vertical">
                    <li class="step-item active">
                        <a href="" class="step-link">
                            <span class="step-number">1</span>
                            <span class="step-title">Publication Details</span>
                        </a>
                    </li>
                    <!-- rejected -->
                    <!-- <li class="step-item rejected">
                        <a href="" class="step-link">
                            <span class="step-number">2</span>
                            <span class="step-title">Fill Up Event Details</span>
                        </a>
                    </li> -->
                    <li class="step-item disabled">
                        <a href="" class="step-link">
                            <span class="step-number">2</span>
                            <span class="step-title">Publication Approval</span>
                        </a>
                    </li>
                </ul>
                <!-- End Steps -->
            </div>
        </div>
    </div>
    <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
        <!-- Start Form -->
        <div class="border-form rounded-top">
            <form>
                <div class="form-container">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Coauthor, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Coauthor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="form-group col-lg-6">
                            &nbsp;
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly", cols = 48, @rows = 5 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label" })
                            <select class="js-example-basic-multiple" id="pub_lang" name="pub_langs[]" multiple="multiple" style="width: 100%;" disabled="disabled">
                                <option value="English">English</option>
                                <option value="Malay">Malay</option>
                            </select>
                            @Html.HiddenFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            <div class="custom-control custom-checkbox">
                                @Html.EditorFor(model => model.Free, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                @Html.LabelFor(model => model.Free, htmlAttributes: new { @class = "custom-control-label" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            Format
                        </div>
                        <div class="form-group col-lg-6">
                            Price (RM)
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            <div class="custom-control custom-checkbox">
                                @Html.EditorFor(model => model.Hardcopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                @Html.LabelFor(model => model.Hardcopy, htmlAttributes: new { @class = "custom-control-label" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.EditorFor(model => model.HPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            <div class="custom-control custom-checkbox">
                                @Html.EditorFor(model => model.Digitalcopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                @Html.LabelFor(model => model.Digitalcopy, htmlAttributes: new { @class = "custom-control-label" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.EditorFor(model => model.DPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            <div class="custom-control custom-checkbox">
                                @Html.EditorFor(model => model.HDcopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                @Html.LabelFor(model => model.HDcopy, htmlAttributes: new { @class = "custom-control-label" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.EditorFor(model => model.HDPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <!--
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.ProofOfApproval, htmlAttributes: new { @class = "control-label" })
                            <div class="custom-file">
                                @Html.EditorFor(model => model.ProofOfApproval, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                <input type="file" class="custom-file-input" name="file" id="inputfile" multiple />
                                <label class="custom-file-label" for="customFile">No file choosen</label>
                            </div>
                            <div id="fileList"></div>
                        </div>
                    </div>
                    -->
                    <div class="row" style="display:none;">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.ProofOfApproval, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ProofOfApproval, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.StockBalance, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.StockBalance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="form-group col-lg-6">
                            &nbsp;
                        </div>
                    </div>
                </div>
            </form>
            <!-- End Form -->
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <button type="submit" class="btn btn-secondary" value="Delete">Delete</button>
                <a class="btn btn-secondary" href="@Url.Action("Index", "Publication", new { area = "RnP" })" data-toggle="tooltip" data-placement="top" title="Back">Back</a>
            </div>
        }
    </div>

</div>

@section ContentScript {
    <script type="text/javascript">
        $(document).ready(function () {
            var selectedLang = $('#Language').val();
            if (selectedLang.indexOf("English") >= 0) {
                $('#pub_lang option').each(function () {
                    if ($(this).text() == "English") {
                        $(this).prop("selected", true);
                    }
                });
            }
            if (selectedLang.indexOf("Malay") >= 0) {
                $('#pub_lang option').each(function () {
                    if ($(this).text() == "Malay") {
                        $(this).prop("selected", true);
                    }
                });
            }
            $('#pub_lang').trigger('change');
        });
    </script>
}

