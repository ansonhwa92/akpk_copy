@model FEP.WebApiModel.RnP.UpdatePublicationModel

@{
    ViewBag.Title = "Review Publication for Submission";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href="~/RnP/Publication" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/RnP/Home">Research & Publication</a></li>
                                <li class="breadcrumb-item"><a href="~/RnP/Publication">Publication</a></li>
                                <li class="breadcrumb-item"><a href="#">Review Publication</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Review Publication for Submission</h1>
                    <div class="header-text">Review details of publication before submission to Verifier & Approver.</div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-xl-3 col-md-3 col-sm-4 my-2">
            <div class="sidebar-left">
                <!-- Steps -->
                <div class="sidebar-inner sticky">
                    <ul class="steps steps-vertical">
                        <li class="step-item complete">
                            <a href="" class="step-link">
                                <span class="step-number">1</span>
                                <span class="step-title">Select Publication Category</span>
                            </a>
                        </li>
                        <li class="step-item complete">
                            <a href="" class="step-link">
                                <span class="step-number">2</span>
                                <span class="step-title">Fill In Publication Details</span>
                            </a>
                        </li>
                        <li class="step-item active">
                            <a href="" class="step-link">
                                <span class="step-number">3</span>
                                <span class="step-title">Review & Submission</span>
                            </a>
                        </li>
                    </ul>
                    <!-- End Steps -->
                </div>
            </div>
        </div>
        <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
            <!-- Start Form -->
            <div class="border-form rounded-top">
                <div class="form-container tab-content">
                    <div class="tab-pane active" id="publication-details">
                        <div class="tab-pane" id="setting1">
                            <div class="d-flex align-items-center mb-4 mt-2">
                                <h4 class="color-darkblue mr-auto mb-0">Publication Details<br><span class="small">View publication details below.</span></h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Coauthor, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Coauthor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-6">
                                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="form-group col-lg-6">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                @*Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly", cols = 48, @rows = 5 })*@
                                <textarea id="Description" name="Description" class="form-control" rows="3" readonly="readonly">@Html.ValueFor(model => model.Description)</textarea>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label" })
                                <select class="js-example-basic-multiple" id="pub_lang" name="pub_langs[]" multiple="multiple" style="width: 100%;" disabled="disabled">
                                    <option value="Bahasa Malaysia">Bahasa Malaysia</option>
                                    <option value="English">English</option>
                                </select>
                                @Html.HiddenFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-4">
                                Format
                            </div>
                            <div class="form-group col-lg-4">
                                Free?
                            </div>
                            <div class="form-group col-lg-4">
                                Price (RM)
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-4">
                                <div class="custom-control custom-checkbox">
                                    @Html.EditorFor(model => model.Hardcopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.Hardcopy, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                <div class="custom-control custom-checkbox">
                                    @Html.EditorFor(model => model.FreeHCopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.FreeHCopy, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.EditorFor(model => model.HPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-4">
                                <div class="custom-control custom-checkbox">
                                    @Html.EditorFor(model => model.Digitalcopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.Digitalcopy, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                <div class="custom-control custom-checkbox">
                                    @Html.EditorFor(model => model.FreeDCopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.FreeDCopy, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.EditorFor(model => model.DPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-4">
                                <div class="custom-control custom-checkbox">
                                    @Html.EditorFor(model => model.HDcopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.HDcopy, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                <div class="custom-control custom-checkbox">
                                    @Html.EditorFor(model => model.FreeHDCopy, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row", @readonly = "readonly" } })
                                    @Html.LabelFor(model => model.FreeHDCopy, htmlAttributes: new { @class = "custom-control-label" })
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                @Html.EditorFor(model => model.HDPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <!--
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.ProofOfApproval, htmlAttributes: new { @class = "control-label" })
                                <div class="custom-file">
                                    @Html.EditorFor(model => model.ProofOfApproval, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    <input type="file" class="custom-file-input" name="file" id="inputfile" multiple />
                                    <label class="custom-file-label" for="customFile">No file choosen</label>
                                </div>
                                <div id="fileList"></div>
                            </div>
                        </div>
                        -->
                        <div class="row" style="display:none;">
                            <div class="form-group col-lg-12">
                                @Html.LabelFor(model => model.ProofOfApproval, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ProofOfApproval, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-6">
                                @Html.LabelFor(model => model.StockBalance, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.StockBalance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                            <div class="form-group col-lg-6">
                                &nbsp;
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="modalConfirmDelete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body text-center">
                                <p class="small">Are you sure you want to delete this Draft Publication?</p>
                            </div>
                            <div class="divider-border"></div>
                            <div class="m-4 text-center">
                                <button class="btn btn-default font-weight-normal mr-2" data-dismiss="modal" aria-label="Close">No, do not delete</button>
                                <button class="btn btn-secondary" data-dismiss="modal" data-toggle="modal" id="btnDiscardConfirm" data-pubid="@Model.ID.ToString()">Yes, please delete</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="confirm-email" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body text-center">
                                <p class="small">Would you like to send confirmation emails to<br>recommended representatives?</p>
                            </div>
                            <div class="divider-border"></div>
                            <div class="m-4 text-center">
                                <button class="btn btn-default font-weight-normal mr-2" data-dismiss="modal" aria-label="Close">No, not yet</button>
                                <button class="btn btn-secondary" data-dismiss="modal" data-toggle="modal" data-target="#confirm-email-yes">Yes, please send</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="confirm-email-yes" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body text-center">
                                <img src="../img/icon-noti-email.svg" alt="image">
                                <h4 class="color-darkblue mt-4">Confirmation Email Sent</h4>
                                <p class="small">Your request has been sent.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Form -->
            </div>
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <!--input type="submit" value="Create" class="btn btn-default" /-->
                @Html.HiddenFor(model => model.CreatorId, new { htmlAttributes = new { @class = "form-control" } })
                <a class="btn btn-default" href="@Url.Action("Edit", "Publication", new { area = "RnP", @id = Model.ID })" data-toggle="tooltip" data-placement="top" title="Back">Back</a>
                <button type="submit" class="btn btn-secondary" id="btnSubmit">Submit for Approval</button>
                <button type="button" class="btn btn-default" id="btnDiscard"><i class="la la-trash font-icon" style="font-size: 1.5rem;"></i>Discard</button>
            </div>
        </div>
    </div>

}

@section ContentScript {
    <script type="text/javascript">
        $(document).ready(function () {

            var selectedLang = $('#Language').val();
            if (selectedLang.indexOf("English") >= 0) {
                $('#pub_lang option').each(function () {
                    if ($(this).text() == "English") {
                        $(this).prop("selected", true);
                    }
                });
            }
            if (selectedLang.indexOf("Bahasa Malaysia") >= 0) {
                $('#pub_lang option').each(function () {
                    if ($(this).text() == "Bahasa Malaysia") {
                        $(this).prop("selected", true);
                    }
                });
            }
            $('#pub_lang').trigger('change');

            $('#btnDiscard').click(function (event) {
                $("#modalConfirmDelete").modal();
                return false;
            });

            $('#btnDiscardConfirm').click(function () {
                var pid = $(this).data('pubid');
                var url = '@Url.Action("Discard", "Publication", new { area = "RnP" })?id=' + pid;
                window.location = url;
            });

        });
    </script>
}


