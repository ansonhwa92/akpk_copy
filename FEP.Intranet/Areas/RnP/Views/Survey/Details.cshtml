@model FEP.WebApiModel.RnP.ReturnSurveyModel

@{
    ViewBag.Title = "Survey Details";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href="~/RnP/Survey" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/RnP/Home">Research & Publication</a></li>
                                <li class="breadcrumb-item"><a href="~/RnP/Survey">Survey</a></li>
                                <li class="breadcrumb-item"><a href="#">Survey Details</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Survey Details</h1>
                    <div class="header-text">View details of survey.</div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xl-3 col-md-3 col-sm-4 my-2">
        <div class="sidebar-left">
            <!-- Steps -->
            <div class="sidebar-inner sticky">
                <ul class="steps steps-vertical">
                    <li class="step-item active">
                        <a href="" class="step-link">
                            <span class="step-number">1</span>
                            <span class="step-title">Fill Up Survey Details</span>
                        </a>
                    </li>
                    <li class="step-item disabled">
                        <a href="" class="step-link">
                            <span class="step-number">2</span>
                            <span class="step-title">Design Survey Questions</span>
                        </a>
                    </li>
                    <!-- rejected -->
                    <!-- <li class="step-item rejected">
                        <a href="" class="step-link">
                            <span class="step-number">2</span>
                            <span class="step-title">Fill Up Event Details</span>
                        </a>
                    </li> -->
                    <li class="step-item disabled">
                        <a href="" class="step-link">
                            <span class="step-number">3</span>
                            <span class="step-title">Survey Approval</span>
                        </a>
                    </li>
                </ul>
                <!-- End Steps -->
            </div>
        </div>
    </div>
    <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
        <!-- Start Form -->
        <div class="border-form rounded-top">
            <form>
                <div class="form-container">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly", cols = 48, @rows = 5 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.TargetGroup, htmlAttributes: new { @class = "control-label" })
                            <select class="js-example-basic-multiple" id="survey_group" name="survey_groups[]" multiple="multiple" style="width: 100%;" disabled="disabled">
                                <option value="Group 1">Group 1</option>
                                <option value="Group 2">Group 2</option>
                                <option value="Group 3">Group 3</option>
                                <option value="Group 4">Group 4</option>
                                <option value="Group 5">Group 5</option>
                            </select>
                            @Html.HiddenFor(model => model.TargetGroup, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label", @title = "The start date of the Survey duration" })
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label", @title = "The end date of the Survey duration" })
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </form>
            <!-- End Form -->
        </div>
        @if (Model.Status == FEP.Model.SurveyStatus.New)
        {
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <a class="btn btn-default" href="@Url.Action("Index", "Survey", new { area = "RnP" })" data-toggle="tooltip" data-placement="top" title="Back">Back</a>
                <a class="btn btn-secondary" href="@Url.Action("Edit", "Survey", new { area = "RnP", @id = Model.ID })" data-toggle="tooltip" data-placement="top" title="Edit">Edit</a>
            </div>
        }
        else
        {
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <a class="btn btn-default" href="@Url.Action("Index", "Survey", new { area = "RnP" })" data-toggle="tooltip" data-placement="top" title="Back">Back</a>
            </div>
        }
    </div>
</div>

@section ContentScript {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#StartDate").flatpickr({
                dateFormat: "d-m-Y",
                maxDate: "31-01-3000",
            });
            $("#EndDate").flatpickr({
                dateFormat: "d-m-Y",
                maxDate: "31-01-3000",
            });
            var selectedGroup = $('#TargetGroup').val();
            if (selectedGroup.indexOf("Group 1") >= 0) {
                $('#survey_group option').each(function () {
                    if ($(this).text() == "Group 1") {
                        $(this).prop("selected", true);
                    }
                });
            }
            if (selectedGroup.indexOf("Group 2") >= 0) {
                $('#survey_group option').each(function () {
                    if ($(this).text() == "Group 2") {
                        $(this).prop("selected", true);
                    }
                });
            }
            if (selectedGroup.indexOf("Group 3") >= 0) {
                $('#survey_group option').each(function () {
                    if ($(this).text() == "Group 3") {
                        $(this).prop("selected", true);
                    }
                });
            }
            if (selectedGroup.indexOf("Group 4") >= 0) {
                $('#survey_group option').each(function () {
                    if ($(this).text() == "Group 4") {
                        $(this).prop("selected", true);
                    }
                });
            }
            if (selectedGroup.indexOf("Group 5") >= 0) {
                $('#survey_group option').each(function () {
                    if ($(this).text() == "Group 5") {
                        $(this).prop("selected", true);
                    }
                });
            }
            $('#survey_group').trigger('change');
        });
    </script>
}
