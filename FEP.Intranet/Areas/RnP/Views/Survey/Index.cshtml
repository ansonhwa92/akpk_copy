@model FEP.WebApiModel.RnP.ReturnListSurveyModel

@{
	ViewBag.Title = "Survey";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href="~/RnP/Home" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="~/Home">Home</a></li>
								<li class="breadcrumb-item"><a href="~/RnP/Home">Research & Publication</a></li>
								<li class="breadcrumb-item"><a href="#">Survey</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">List of Surveys</h1>
					<div class="header-text">Create, edit, delete and manage surveys.</div>
				</div>
			</div>
		</div>
	</div>
}

<div class="d-flex align-items-center">
	<div class="filter dropdown">
		<button class="btn btn-default btn-rounded color-grey font-weight-normal cycle-element"><i class="la la-sliders font-icon color-secondary"></i>Filters</button>
		<div class="dropdown-menu">
			<div class="filter-head">Filters</div>
			<div class="filter-body">
				<!--
				<div class="sorting-wrap">
					<div class="sorting-dropdown">
						<select class="select2 form-control small" name="filter">
							<option value="all">All</option>
							<option value="1">1</option>
							<option value="2">2</option>
						</select>
					</div>
				</div>
				-->
				<!--
				<div class="sorting-wrap">
					<div class="sorting-dropdown">
						@*Html.EditorFor(m => m.Filters.Type, new { htmlAttributes = new { @class = "form-control small" } })*@
					</div>
				</div>
				-->
				<div>@Html.DisplayNameFor(m => m.Filters.Title)</div>
				<div class="sorting-wrap">
					<div class="sorting-dropdown">
						@Html.EditorFor(m => m.Filters.Title, new { htmlAttributes = new { @class = "form-control small" } })
					</div>
				</div>
				<div>
					<button id="btnSearch" class="btn btn-secondary">Search</button>
				</div>
			</div>
		</div>
	</div>
	<div class="divider-vertical">&nbsp;</div>
	<!-- Search -->
	<div class="input-keyword col-lg-5 col-sm-12 mr-auto px-0">
		<input id="quickSearch" type="text" class="form-control form-control-rounded" placeholder="Search" name="keyword">
		<div class="input-group-append">
			<button id="quickSearchBtn" class="btn btn-circle" type="button"><i class="fas fa-search text-white"></i></button>
		</div>
	</div>
</div>
<hr>
<div class="table-responsive" data-toggle="lists">
	<div class="d-flex pb-4 align-items-center">
		<div>
			<!-- Select option -->
			<span class="select-arrow">
				<select id="lengthChange" name="dataTable_length" aria-controls="dataTable" class="custom-select">
					<option value="10">10</option>
					<option value="25">25</option>
					<option value="50">50</option>
					<option value="100">100</option>
				</select>
			</span>
		</div>
		<div id="pageInfo" class="showing-result px-3 py-2 mr-auto"></div>
		<div><a href="@Url.Action("SelectType", "Survey", new { area = "RnP" })" class="btn btn-secondary"><i class="la la-plus font-icon" style="font-size: 1.5rem;"></i>Create Survey</a></div>
	</div>
	<!-- Table -->
	<table class="table tableStyle1 tabledata">
		<thead>
			<tr>
				<th>#</th>
				<th>@Html.DisplayNameFor(model => model.Surveys.Title)</th>
				<th>@Html.DisplayNameFor(model => model.Surveys.Type)</th>
				<th>Duration</th>
				<th>Response</th>
				<!--<th>@*Html.DisplayNameFor(model => model.Surveys.Active)*@</th>-->
				<th>@Html.DisplayNameFor(model => model.Surveys.Status)</th>
				<th>Action</th>
			</tr>
		</thead>
	</table>
</div>

@section ContentScript{

	<script type="text/javascript">
        $(document).ready(function () {
            var table = $('.tabledata').DataTable({
                serverSide: true,
                processing: true,
                ajax: {
                    "type": "post",
                    "url": '@(WebApiURL)RnP/Survey/GetAll',
                    "data": function (filter) {
                        //filter.Type = $('#Filters_Type').val();
                        filter.Title = $('#Filters_Title').val();
                        //filter.StartDate = $('#Filters_StartDate').val();
                        //filter.EndDate = $('#Filters_EndDate').val();
                    },
                    dataFilter: function (res) {
                        // do what you need to the data before it loads to the table
                        // for debugging only for now
                        return res;
                    },
                    error: function (x, y) {
                        console.log(x);
                    }
                },
                columns: [
                    {
                        sortable: false,
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        data: 'Title',
                        sortable: true
                    },
                    {
                        data: 'Type',
                        sortable: true,
                        render: function (data, type, row, meta) {
                            if (row.Type == 0) {
                                return "<span>Public Mass</span>";
                            }
                            else if (row.Type == 1) {
                                return "<span>Targeted Groups</span>";
                            }
                        }
                    },
                    {
                        data: 'Duration',
                        sortable: true,
                        render: function (data, type, row, meta) {
                            var sdate = new Date(row.StartDate);
                            var sday = ("0" + sdate.getDate()).slice(-2);            //sdate.getDate();
                            var smonth = ("0" + (sdate.getMonth() + 1)).slice(-2);   //sdate.getMonth();
                            var syear = sdate.getFullYear();
                            var sfinaldate = sday + '/' + smonth + '/' + syear;
                            var edate = new Date(row.EndDate);
                            var eday = ("0" + edate.getDate()).slice(-2);            //sdate.getDate();
                            var emonth = ("0" + (edate.getMonth() + 1)).slice(-2);   //sdate.getMonth();
                            var eyear = edate.getFullYear();
                            var efinaldate = eday + '/' + emonth + '/' + eyear;
                            return "<span>" + sfinaldate + " to " + efinaldate + "</span>";
                        }

                    },
                    {
                        data: 'Progress',
                        sortable: false,
                        render: function (data, type, row, meta) {
                            return "<span>" + row.SubmitCount + " / " + row.InviteCount + "</span>";
                            // TODO: return progress bar
                        }
                    },
                    {
                        data: 'Status',
                        sortable: true,
                        render: function (data, type, row, meta) {
                            if (row.Status == 0) {
                                return "<span class='color-grey font-weight-bold'>Draft</span>";
                            }
                            else if (row.Status == 1) {
                                return "<span class='color-yellow font-weight-bold'>Pending Verification</span>";
                            }
                            else if (row.Status == 2) {
                                return "<span class='color-red font-weight-bold'>Pending Amendment</span>";
                            }
                            else if (row.Status == 3) {
                                return "<span class='color-yellow font-weight-bold'>Pending Approval</span>";
                            }
                            else if (row.Status == 4) {
                                return "<span class='color-red font-weight-bold'>Pending Amendment</span>";
                            }
                            else if (row.Status == 5) {
                                return "<span class='color-green font-weight-bold'>Approved</span>";
                            }
                            else if (row.Status == 6) {
                                return "<span class='color-green font-weight-bold'>Published</span>";
                            }
                            else if (row.Status == 7) {
                                return "<span class='color-grey font-weight-bold'>Unpublished</span>";
                            }
                            else if (row.Status == 8) {
                                return "<span class='color-grey font-weight-bold'>Cancelled</span>";
                            }
                        }
                    },
                    {
                        sortable: false,
                        render: function (data, type, row, meta) {

                            var action = "";

                            var canview = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyView));
                            var canedit = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyEdit));
                            var canverify = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyVerify));
                            var canapprove1 = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyApprove1));
                            var canapprove2 = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyApprove2));
                            var canapprove3 = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyApprove3));
                            var canpublish = @Json.Encode(CurrentUser.HasAccess(UserAccess.RnPSurveyPublish));

                            action = '<div class="icon-action">';

                            if (canview) {
                                action += '<a href="@Url.Action("Details", "Survey", new { area = "RnP" })/' + row.ID + '" data-toggle="tooltip" data-placement="top" title="View"><i class="la la-eye text-muted"></i></a>&nbsp;';
                            }

							if (row.Status == 0) {          // new
								   action += '<a href="@Url.Action("Details", "Survey", new { area = "RnP" })/' + row.ID + '" data-toggle="tooltip" data-placement="top" title="View"><i class="la la-eye text-muted"></i></a>&nbsp;';
                                if (canedit) {
                                    action += '<a href="@Url.Action("Edit", "Survey", new { area = "RnP" })/' + row.ID + '" data-toggle="tooltip" data-placement="top" title="Edit"><i class="la la-edit text-muted"></i></a>';
                                    action += '<a href="@Url.Action("Delete", "Survey", new { area = "RnP" })/' + row.ID + '" data-toggle="tooltip" data-placement="top" title="Delete"><i class="la la-trash-o text-muted"></i></i></a>';
                                }
                            }
                            else if (row.Status == 1) {     // submitted
                                if (canverify || canapprove1 || canapprove2 || canapprove3) {
                                    action += '<a href="@Url.Action("Evaluate", "Survey", new { area = "RnP" })/' + row.ID + '" data-toggle="tooltip" data-placement="top" title="Evaluate"><i class="la la-edit text-muted"></i></a>';
                                }
                            }
                            else if (row.Status == 2) {     // verifier rejected (can edit from view - view lets user see comments)
                                action += '';
                            }
                            else if (row.Status == 3) {     // verified
                                if (canapprove1 || canapprove2 || canapprove3) {
                                    action += '<a href="@Url.Action("Evaluate", "Publication", new { area = "RnP" })/' + row.ID + '" data-toggle="tooltip" data-placement="top" title="Evaluate"><i class="la la-edit text-muted"></i></a>';
                                }
                            }
                            else if (row.Status == 4) {     // approver rejected
                                action += '';
                            }
                            else if (row.Status == 5) {     // approved (can publish from view, too)
                                action += '';
                            }
                            else if (row.Status == 6) {     // published (can unpublish/deactivate from view)
                                action += '';
                            }
                            else if (row.Status == 7) {     // unpublished
                                action += '';
                            }
                            else if (row.Status == 8) {     // trashed
                                action += '';
                            }

                            return action;
                        }
                    }
                ],
                paging: true,
                lengthChange: true,
                searching: true,
                ordering: true,
                orderMulti: false,
                info: true,
                autoWidth: false,
                order: [[1, 'asc']],
                language: {
                    processing: "Processing... <i class='fa fa-refresh fa-spin'></i>",
                    emptyTable: "No Record Found",
                    info: "Showing _START_ - _END_ of _TOTAL_ surveys"
                },
                dom: 'rtip'
            });

            $('#lengthChange').val(table.page.len());

            $('#quickSearch').keyup(function () {
                table.search($(this).val()).draw();
            });

            $('#quickSearchBtn').click(function () {
                table.search($(this).val()).draw();
            });

            $('#lengthChange').change(function () {
                table.page.len($(this).val()).draw();
            });

            $('#btnSearch').click(function () {
                table.ajax.reload();
            });

            table.on('order.dt search.dt', function () {
                var info = table.page.info();
                $('#pageInfo').html('Showing ' + (info.start + 1) + ' - ' + info.end + ' of ' + info.recordsTotal + ' surveys');
                $('[data-toggle="tooltip"]').tooltip({ trigger: 'hover' });
            }).draw();

        });

	</script>

}
