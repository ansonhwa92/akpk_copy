@model FEP.WebApiModel.Template.EditEmailTemplateModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Contentscript{

    <link href="~/Scripts/summernote/summernote-lite.css" rel="stylesheet" />
    <script src="~/Scripts/summernote/summernote-lite.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#summernote').summernote({
                placeholder: 'Type email here',
                tabsize: 2,
                height: 300,
                //width: $('#textareaContainer').parent().width() + ($('#textareaContainer').parent().width() * 0.3)
            });
            //$('#summernote').summernote('code', @Model.TemplateMessage);
        });
    </script>

}

@section Nav {

    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                @*<div class="header-col-right float-right mt-5"><a href="e-Learning.html" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>*@
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { area = "" })">Home</a></li>
                                <li class="breadcrumb-item"><a href="javascript:void(0)">Template</a></li>
                                <li class="breadcrumb-item"><a href="@Url.Action("List", "EmailTemplates", new { area = "Template" })">Email Template</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Email Template List</h1>
                    @*<div class="header-text">List of registered user as individual</div>*@
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="col-xl-3 col-md-3 col-sm-4 my-2">
        <div id="page-nav" class="sidebar-left page-nav">
            <div data-perfect-scrollbar>
                <div class="page-section">
                    <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i> Email Template</h6>
                    <ul class="nav page-nav__menu">
                        <li class="nav-item">
                            <a href="@Url.Action("Details", "EmailTemplates", new { area = "Template", id = Model.Id })" class="nav-link">View</a>
                        </li>
                        <li class="nav-item">
                            <a href="@Url.Action("Edit", "EmailTemplates", new { area = "Template", id = Model.Id })" class="active nav-link">Edit</a>
                        </li>
                        <li class="nav-item">
                            <a href="@Url.Action("Delete", "EmailTemplates", new { area = "Template", id = Model.Id })" class="nav-link">Delete</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
        {
            <div class="border-form rounded-top">

                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.Id)

                <div class="form-container">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.LabelFor(model => model.NotificationTypeList, htmlAttributes: new { @class = "control-label col-lg-12" })
                            <div class="col-lg-12">
                                @Html.DropDownListFor(model => model.NotificationType, Model.NotificationTypeList, "-Select Notification Type-", htmlAttributes: new { @class = "form-control select2", style = "width: 100%" })
                                @Html.ValidationMessageFor(model => model.NotificationTypeList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TemplateRefNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TemplateRefNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TemplateRefNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.TemplateName)
                            @Html.EditorFor(m => m.TemplateName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.TemplateName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TemplateSubject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TemplateSubject, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TemplateSubject, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(m => m.TemplateMessage)
                            @Html.TextAreaFor(m => m.TemplateMessage, new { @class = "form-control summernote", @id = "summernote" })
                            @Html.ValidationMessageFor(m => m.TemplateMessage)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.enableSMSMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.enableSMSMessage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.enableSMSMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SMSMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SMSMessage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SMSMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.enableWebMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.enableWebMessage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.enableWebMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.WebMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WebMessage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WebMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <a href="@Url.Action("List")" class="btn btn-default mr-2">Back</a>
                <button class="btn btn-secondary" type="submit">Save</button>
            </div>
        }
    </div>

</div>

