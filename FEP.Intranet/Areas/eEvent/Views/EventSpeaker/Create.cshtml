@model FEP.Intranet.Areas.eEvent.Models.CreateEventSpeakerModel

@{
	ViewBag.Title = "Event Speaker";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentStyle {

	<link href="~/Scripts/summernote/summernote-lite.css" rel="stylesheet" />

	<style>

		.photo {
			border: 1px solid #ddd; /* Gray border */
			border-radius: 4px; /* Rounded border */
			padding: 5px; /* Some padding */
			width: 250px; /* Set a small width */
		}

			.photo:hover {
				box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
			}
	</style>
}

@section Contentscript{
	<script type="text/javascript">

        $(document).ready(function () {

            RefreshFile();

             $('select[name=SpeakerType]').change(function () {
                $('#UserId').val('');
                $('#UserName').val('');
			 });

			 document.querySelector('#ThumbnailFile').addEventListener('change', function (e) {

                if (this.files.length > 0) {

                    var file = this.files[0];
                    var fd = new FormData();
                    fd.append("ThumbnailFile", file);

                    var xhr = new XMLHttpRequest();

                    xhr.open('POST', '@Url.Action("LoadThumbnail", "EventSpeaker", new { area = "eEvent" })', true);

                    //xhr.upload.onprogress = function (e) {
                    //    if (e.lengthComputable) {
                    //        var percentComplete = (e.loaded / e.total) * 100;
                    //        console.log(percentComplete + '% uploaded');
                    //    }
                    //};

                    xhr.onload = function () {

                        if (this.status == 200) {
                            var resp = JSON.parse(this.response);
                            $('#kmc_thumbnail').attr("src", resp.image64);
                        }
                    };

                    xhr.send(fd);

                }
                else {
                    $('#kmc_thumbnail').attr("src", '@(BaseURL)/img/no-image.png');
                }

            }, false);

            $('.summernote').summernote({ height: 300 });


            setFileAccept($("#Type").val());

        });


        function showSelect() {

            var speakertype = $('#SpeakerType').val();

            if (speakertype == 0) {
                url = '@Url.Action("_Select", "Staff", new { area = "Administrator" })';
            }
            else {
                url = '@Url.Action("_Select", "Individual", new { area = "Administrator" })';
            }


            if (url != '') {

                $.ajax({
                    type: 'get',
                    url: url,
                    success: function (data) {

                        $('#modalUser').html(data);
                        initTable();
                        debugger
                        $('#modalUser').children('.modal').first().modal('show');

                    },
                    error: function (xhr, status, error) {
                        $('#modalUser').html('');
                    }
                });
            }

        }

        function addUser(userid, name) {

            $('#UserId').val(userid);
            $('#UserName').val(name);

		}

		function setFileAccept(val) {

            switch(val) {

                case '0':
                    $("#File").attr("accept", "@Model.filter_imgs");
                    break;

				default:
                    $("#File").removeAttr("accept");

            }
        }

	</script>
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "EventSpeaker", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Event Speaker</a></li>
								<li class="breadcrumb-item"><a href="#">Event Speaker List</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Create Event Speaker</h1>
					@*<div class="header-text">List of created event</div>*@
				</div>
			</div>
		</div>
	</div>

}

@using (Html.BeginForm("Create", "EventSpeaker", FormMethod.Post, new { enctype = "multipart/form-data", id = "target" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<div class="row">
		<div class="col-xl-3 col-md-3 col-sm-4 my-2">
			<div class="sidebar-left">
				<!-- Steps -->
				<div class="sidebar-inner sticky">
					<ul class="steps steps-vertical">
						<li class="step-item complete">
							<a href="" class="step-link">
								<span class="step-number">1</span>
								<span class="step-title">Event Speaker List</span>
							</a>
						</li>
						<li class="step-item active">
							<a href="" class="step-link">
								<span class="step-number">2</span>
								<span class="step-title">Fill Up Event Speaker Details</span>
							</a>
						</li>
						<!-- rejected -->
						<!-- <li class="step-item rejected">
							<a href="" class="step-link">
								<span class="step-number">2</span>
								<span class="step-title">Fill Up Event Details</span>
							</a>
						</li> -->
						@*<li class="step-item disabled">
								<a href="" class="step-link">
									<span class="step-number">3</span>
									<span class="step-title">Event Verification Approval</span>
								</a>
							</li>*@
					</ul>
					<!-- End Steps -->
				</div>
			</div>
		</div>
		<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
			<!-- Start Form -->
			<div class="border-form rounded-top">
				<form>
					<div class="form-container">
						<div class="mt-2 mb-4 pb-1">
							<h4 class="color-darkblue mb-0">Event Speaker Details</h4>
							<h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>
						</div>
						<div class="row">
							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.SpeakerType)
								@Html.EnumDropDownListFor(model => model.SpeakerType, htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
								@Html.ValidationMessageFor(model => model.SpeakerType, "", new { @class = "text-danger" })
							</div>

							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.SpeakerStatus)
								@Html.EnumDropDownListFor(model => model.SpeakerStatus, "-Select Speaker Status-", htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
								@Html.ValidationMessageFor(model => model.SpeakerStatus, "", new { @class = "text-danger" })
							</div>
						</div>


						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.UserId)
								@Html.HiddenFor(model => model.UserId)
								<div class="input-group">
									@Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
									<div class="input-group-append" style="cursor:pointer" onclick="showSelect()">
										<span class="input-group-text"><i class="la la-search"></i></span>
									</div>
								</div>
								@*@Html.DropDownListFor(model => model.UserId, Model.UserIds, "-Select User Name-", htmlAttributes: new { @class = "form-control select2", style = "width: 100%" })*@
								@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.Experience)
								@Html.TextAreaFor(model => model.Experience, new { @class = "form-control", rows = 6, @placeholder = "Be clear and descriptive" })
								@Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
							</div>
						</div>

						@*<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(m => m.ThumbnailUrl)
								<div class="media align-items-center">
									<div class="d-flex mr-3 align-self-center" data-toggle="tooltip" title="Click to upload image" onclick="$('#ThumbnailFile').trigger('click');">
										@if (!String.IsNullOrEmpty(Model.ThumbnailUrl))
										{
											<img id="kmc_thumbnail" src="@(BaseURL)/img/kmc-thumbnail/@Model.ThumbnailUrl" class="photo" />
										}
										else
										{
											<img id="kmc_thumbnail" src="@(BaseURL)/img/no-image.png" class="photo" />
										}
									</div>
									<div class="media-body d-none">
										<div class="custom-file b-form-file">
											@Html.TextBoxFor(m => m.ThumbnailFile, htmlAttributes: new { type = "file", accept = @Model.filter_imgs })
										</div>
									</div>
									@Html.ValidationMessageFor(m => m.ThumbnailFile)
								</div>
							</div>
						</div>*@

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.Attachments)
								@Html.Partial("_Attachment", Model.Attachments)
								@Html.ValidationMessageFor(model => model.Attachments, "", new { @class = "text-danger" })
							</div>
						</div>

				
					</div>
				</form>
				<!-- End Form -->
			</div>
			<div class="border-left border-right border-bottom p-3 rounded-bottom">
				<a href='@Url.Action("List")' class="btn btn-warning btn-flat">Cancel</a>
				<button class="btn btn-secondary" type="submit">Save</button>
			</div>
		</div>
	</div>
}

<div id="modalUser"></div>