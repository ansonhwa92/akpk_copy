@model FEP.Intranet.Areas.eEvent.Models.DetailsEventSpeakerModel

@{
	ViewBag.Title = "Event Speaker";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "EventSpeaker", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Event Speaker</a></li>
								<li class="breadcrumb-item"><a href="#">Event Speaker List</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Delete Event Speaker</h1>
					@*<div class="header-text">List of created event</div>*@
				</div>
			</div>
		</div>
	</div>
}

<div class="row">
	<div class="col-xl-3 col-md-3 col-sm-4 my-2">
		<div class="sidebar-left">
			<!-- Steps -->
			<div class="sidebar-inner sticky">
				<ul class="steps steps-vertical">


					<li class="step-item complete">
						<a href="" class="step-link">
							<span class="step-number">1</span>
							<span class="step-title">List Of Event Speaker</span>
						</a>
					</li>

					<li class="step-item active">
						<a href="" class="step-link">
							<span class="step-number">2</span>
							<span class="step-title">Delete Event Speaker</span>
						</a>
					</li>
					<!-- rejected -->
					<!-- <li class="step-item rejected">
						<a href="" class="step-link">
							<span class="step-number">2</span>
							<span class="step-title">Fill Up Event Details</span>
						</a>
					</li> -->
					@*<li class="step-item disabled">
							<a href="" class="step-link">
								<span class="step-number">3</span>
								<span class="step-title">Event Verification Approval</span>
							</a>
						</li>*@
				</ul>
				<!-- End Steps -->
			</div>
		</div>
	</div>



	<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
		<!-- Start Form -->
		<div class="border-form rounded-top">
			<form>
				<div class="form-container">
					<div class="mt-2 mb-4 pb-1">
						<h4 class="color-darkblue mb-0">
							Are you sure you want to delete this Event Speaker?
						</h4>
						<h6 class="font-weight-normal">View Event Speaker details below.</h6>
					</div>
					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.SpeakerType)
							@Html.EnumDropDownListFor(model => model.SpeakerType, "-Select Speaker Type-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", @disabled = "disabled" })
						</div>

						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.SpeakerStatus)
							@Html.EnumDropDownListFor(model => model.SpeakerStatus, "-Select Speaker Status-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", @disabled = "disabled" })
						</div>
					</div>

					@if (Model.SpeakerType == FEP.Model.SpeakerType.Internal)
					{
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.UserId)
								@Html.DropDownListFor(model => model.UserId, Model.UserIds, "-Select User Name-", htmlAttributes: new { @class = "form-control select2", style = "width: 100%", @disabled = "disabled" })
							</div>
						</div>
					}
					else if (Model.SpeakerType == FEP.Model.SpeakerType.External)
					{
						<div class="row">
							<div class="form-group col-lg-6">
								@Html.LabelFor(model => model.Email)
								@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Address", @readonly = "readonly" } })
							</div>

							<div class="form-group col-lg-6">
								@Html.LabelFor(model => model.PhoneNo)
								@Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Address", @readonly = "readonly" } })
							</div>
						</div>
					}

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Experience)
							@Html.TextAreaFor(model => model.Experience, new { @class = "form-control", rows = 6, @readonly = "readonly" })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Attachments)
							@Html.Partial("_AttachmentDetails", Model.Attachments)
						</div>
					</div>

					@*<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.SpeakerPicture)
								@Html.EditorFor(model => model.SpeakerPictureName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
							</div>
						</div>*@

				</div>
			</form>

		</div>
		<div class="border-left border-right border-bottom p-3 rounded-bottom">
			@using (Html.BeginForm())
			{
				@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.Id)

				<a href='@Url.Action("List")' style="text-decoration: none;" class="btn btn-default btn-flat">Cancel</a>
				<button type="submit" class="btn btn-secondary">Delete</button>
			}
		</div>
	</div>
</div>