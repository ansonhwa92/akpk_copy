@model FEP.Intranet.Areas.eEvent.Models.CreateExhibitionRoadshowRequestModel

@{
	ViewBag.Title = "Exhibition/Roadshow Request";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentScript{

	<script type="text/javascript">

		$(document).ready(function () {

			RefreshFile();

		});

		$("#StartDate").flatpickr({
			dateFormat: "d/m/Y",
			enableTime: false,
			minDate: "today",
			onValueUpdate: function (dObj, dStr, fp, dayElem) {
				debugger;
				$("#EndDate").flatpickr({
					dateFormat: "d/m/Y",
					enableTime: false,
					minDate: dStr,
				});
			}
		});

		$("#EndDate").flatpickr({
			dateFormat: "d/m/Y",
			enableTime: false,
			minDate: "today",
		});

	</script>

}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "ExhibitionRoadshowRequest", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Exhibition/Roadshow Request</a></li>
								<li class="breadcrumb-item"><a href="#">Exhibition/Roadshow Request List</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Create Exhibition/Roadshow Request</h1>
					<div class="header-text">You can create an event in a few quick steps to promote any gathering.</div>
				</div>
			</div>
		</div>
	</div>

}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="row">
		<div class="col-xl-3 col-md-3 col-sm-4 my-2">

			<div id="page-nav" class="sidebar-left page-nav">
				<!-- Steps -->
				<div data-perfect-scrollbar>
					<div class="sidebar-inner">
						<ul class="steps steps-vertical nav">

							<li class="step-item complete">
								<a href="#select_category" id="tab_category" class="step-link" data-toggle="tab">
									<span class="step-number">1</span>
									<span class="step-title">Select Event Category</span>
								</a>
							</li>


							<li class="step-item active">
								<a href="#exhibition_details" id="tab_exhibitiondetails" class="step-link" data-toggle="tab">
									<span class="step-number">2</span>
									<span class="step-title">Fill Up Exhibition Details</span>
								</a>
							</li>


							<li class="step-item active">
								<a href="#event_details" id="tab_eventdetails" class="step-link" data-toggle="tab">
									<span class="step-number">3</span>
									<span class="step-title">Fill Up Event Details</span>
								</a>
							</li>


							<li class="step-item disabled">
								<a href="#event_reviewsubmission" id="tab_reviewsubmission" class="step-link" data-toggle="tab">
									<span class="step-number">4</span>
									<span class="step-title">Review & Submission</span>
								</a>
							</li>
						</ul>
						<!-- End Steps -->
					</div>
				</div>
			</div>
		</div>
		@* ----------------------------------------------------------------------------- *@
		<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
			<!-- Start Form -->
			<div class="border-form rounded-top">
				<div class="form-container tab-content">
					<div class="tab-pane active" id="exhibition_details">

						<div class="mt-2 mb-4 pb-1 mr-auto">
							<h4 class="color-darkblue mb-0">Fill up Exhibition Details</h4>
							<h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.ReceivedById, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.DropDownListFor(model => model.ReceivedById, Model.ReceivedBys, "-Select Name-", htmlAttributes: new { @class = "form-control select2-area", style = "width: 100%" })
								@Html.ValidationMessageFor(model => model.ReceivedById, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.ReceivedDate, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.Receive_Via, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.EditorFor(model => model.Receive_Via, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Receive_Via, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.Attachments)
								@Html.Partial("_Attachment", Model.Attachments)
								@Html.ValidationMessageFor(model => model.Attachments, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="border-top p-3 rounded-bottom">
							<a class="btn btn-default font-weight-normal mr-2" href='@Url.Action("List")'>Back</a>
							<a class="btn btn-secondary" href="#event_details" data-toggle="tab">Next</a>
						</div>
					</div>


					<div class="tab-pane" id="event_details">
						<div class="mb-4 mt-2 mr-auto">
							<h4 class="color-darkblue mb-0">Fill up Event Details</h4>
							<h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.Organiser, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.EditorFor(model => model.Organiser, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Organiser, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.OrganiserEmail, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.EditorFor(model => model.OrganiserEmail, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.OrganiserEmail, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.AddressStreet1)
								@Html.EditorFor(model => model.AddressStreet1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1" } })
								@Html.ValidationMessageFor(model => model.AddressStreet1, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.EditorFor(model => model.AddressStreet2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1" } })
								@Html.ValidationMessageFor(model => model.AddressStreet2, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-6">
								@Html.EditorFor(model => model.AddressPoscode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Poscode" } })
								@Html.ValidationMessageFor(model => model.AddressPoscode, "", new { @class = "text-danger" })
							</div>
							<div class="form-group col-lg-6">
								@Html.EditorFor(model => model.AddressCity, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
								@Html.ValidationMessageFor(model => model.AddressCity, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.State)
								@Html.EnumDropDownListFor(model => model.State, "-Select State-", htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
								@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.StartDate)
								@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start" } })
								@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
							</div>
							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.EndDate)
								@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End" } })
								@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
							</div>
						</div>


						<div class="row">
							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.StartTime)
								@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeSelect", @placeholder = "Start Time" } })
								@Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
							</div>
							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.EndTime)
								@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeSelect", @placeholder = "End Time" } })
								@Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
							</div>
						</div>


						<div class="row">
							<div class="form-group col-lg-6">
								@Html.FEPLabelFor(model => model.ParticipationRequirement, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.EditorFor(model => model.ParticipationRequirement, new { htmlAttributes = new { @class = "form-control", @placeholder = "No. of Participant" } })
								@Html.ValidationMessageFor(model => model.ParticipationRequirement, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.FEPLabelFor(model => model.NomineeId, htmlAttributes: new { @class = "control-label col-md-12" })
								@Html.ListBoxFor(model => model.NomineeId, Model.Nominees, htmlAttributes: new { @class = "js-example-basic-multiple", style = "width: 100%;" })
								@Html.ValidationMessageFor(model => model.NomineeId, "", new { @class = "text-danger" })
							</div>
						</div>

						<hr />
						<div>
							<input class="form-control" type="hidden" name="CreatorId" id="CreatorId" value="@CurrentUser.UserId">
							<a class="btn btn-default font-weight-normal mr-2" href='@Url.Action("List")'>Back</a>
							<button type="submit" class="btn btn-default" id="btnSave" name="Submittype" value="Save"><i class="la la-save font-icon" style="font-size: 1.5rem;"></i>Save as Draft</button>
							<button type="submit" class="btn btn-secondary" id="btnSubmit" name="Submittype" value="Submit">Review for Submission</button>
						</div>

					</div>
				</div>
			</div>
		</div>
	</div>
}
