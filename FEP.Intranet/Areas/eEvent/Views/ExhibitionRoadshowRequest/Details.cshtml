@model FEP.WebApiModel.eEvent.DetailsExhibitionRoadshowRequestModel

@{
	ViewBag.Title = "Exhibition/Roadshow Request";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}


@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "ExhibitionRoadshowRequest", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Exhibition/Roadshow Request</a></li>
								<li class="breadcrumb-item"><a href="#">Exhibition/Roadshow Request List</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Exhibition/Roadshow Request Details</h1>
					@*<div class="header-text">List of created media interview</div>*@
				</div>
			</div>
		</div>
	</div>

}

<div class="row">
	<div class="col-xl-3 col-md-3 col-sm-4 my-2">
		<div class="sidebar-left">
			<!-- Steps -->
			<div class="sidebar-inner sticky">
				<ul class="steps steps-vertical">
					<li class="step-item complete">
						<a href="" class="step-link">
							<span class="step-number">1</span>
							<span class="step-title">Exhibition/Roadshow Request List</span>
						</a>
					</li>
					<li class="step-item active">
						<a href="" class="step-link">
							<span class="step-number">2</span>
							<span class="step-title">Exhibition/Roadshow Request Details</span>
						</a>
					</li>
					<!-- rejected -->
					<!-- <li class="step-item rejected">
						<a href="" class="step-link">
							<span class="step-number">2</span>
							<span class="step-title">Fill Up Event Details</span>
						</a>
					</li> -->
					@*<li class="step-item disabled">
							<a href="" class="step-link">
								<span class="step-number">3</span>
								<span class="step-title">Event Verification Approval</span>
							</a>
						</li>*@
				</ul>
				<!-- End Steps -->
			</div>
		</div>
	</div>
	<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
		<!-- Start Form -->
		<div class="border-form rounded-top">
			<form>
				<div class="form-container">
					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.EventName)
							@Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Organiser)
							@Html.EditorFor(model => model.Organiser, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Location)
							@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.StartDate)
							@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start", @disabled = "disabled" } })
						</div>
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.EndDate)
							@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End", @disabled = "disabled" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.StartTime)
							@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeSelect", @placeholder = "Time Start", @disabled = "disabled" } })
						</div>
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.EndTime)
							@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeSelect", @placeholder = "Time End", @disabled = "disabled" } })
							@*@Html.Raw(Model.EndTime.ToString("hh:mm "))*@
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.ParticipationRequirement)
							@Html.EditorFor(model => model.ParticipationRequirement, new { htmlAttributes = new { @class = "form-control", @placeholder = "No. of Participant", @readonly = "readonly" } })
						</div>
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.ExhibitionStatus)
							@Html.EditorFor(model => model.ExhibitionStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.NomineeId)
							@Html.EditorFor(model => model.NomineeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.ReceivedById)
							@Html.EditorFor(model => model.ReceivedByName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.ReceivedDate)
							@Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Receive_Via)
							@Html.EditorFor(model => model.Receive_Via, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>
				</div>
			</form>
		</div>
		<div class="border-left border-right border-bottom p-3 rounded-bottom">
			<div class="col-xs-12">
				<a href='@Url.Action("List")' class="btn btn-warning">Back</a>
				<a href='@Url.Action("Edit",new { id = Model.Id })' class="btn btn-primary">Edit</a>
			</div>
		</div>
	</div>
</div>
