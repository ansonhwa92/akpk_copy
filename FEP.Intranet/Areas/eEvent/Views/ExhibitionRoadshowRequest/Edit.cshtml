@model FEP.Intranet.Areas.eEvent.Models.EditExhibitionRoadshowRequestModel

@{
	ViewBag.Title = "Exhibition/Roadshow Request";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentScript{

	<script type="text/javascript">

		$(document).ready(function () {

			RefreshFile();

		});

		$("#StartDate").flatpickr({
			dateFormat: "d/m/Y",
			enableTime: false,
			minDate: "today",
			onValueUpdate: function (dObj, dStr, fp, dayElem) {
				debugger;
				$("#EndDate").flatpickr({
					dateFormat: "d/m/Y",
					enableTime: false,
					minDate: dStr,
				});
			}
		});

		$("#EndDate").flatpickr({
			dateFormat: "d/m/Y",
			enableTime: false,
			minDate: "today",
		});

	</script>

}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "ExhibitionRoadshowRequest", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Exhibition/Roadshow Request</a></li>
								<li class="breadcrumb-item"><a href="#">Exhibition/Roadshow Request List</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Edit Exhibition/Roadshow Request</h1>
					@*<div class="header-text">List of created event</div>*@
				</div>
			</div>
		</div>
	</div>

}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "target" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)
	@Html.HiddenFor(model => model.ExhibitionStatus)

	<div class="row">
		<div class="col-xl-3 col-md-3 col-sm-4 my-2">
			<div class="sidebar-left">
				<!-- Steps -->
				<div class="sidebar-inner sticky">
					<ul class="steps steps-vertical">

						<li class="step-item disabled">
							<a href="" class="step-link">
								<span class="step-number">1</span>
								<span class="step-title">Exhibition/Roadshow Request List</span>
							</a>
						</li>


						<li class="step-item active">
							<a href="" class="step-link">
								<span class="step-number">2</span>
								<span class="step-title">Fill up Exhibition Details</span>
							</a>
						</li>


						<li class="step-item active">
							<a href="" class="step-link">
								<span class="step-number">3</span>
								<span class="step-title">Fill up Event Details</span>
							</a>
						</li>

					</ul>
					<!-- End Steps -->
				</div>


				<br />

			</div>
		</div>



		<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
			<!-- Start Form -->
			<div class="border-form rounded-top">
				<div class="form-container">


					<div class="mt-2 mb-4 px-3 pt-4">
						<h4 class="color-darkblue mb-0">Review & Submission</h4>
						<h6 class="font-weight-normal">Review your request before submitting</h6>
					</div>
					<!-- Start Tabbing Review Step for submission -->
					<div class="custom-tab px-3">
						<ul class="nav nav-line">
							<li class="nav-item">
								<a class="nav-link active" href="#exhibitiondetails" data-toggle="tab">Exhibition Details</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" href="#eventdetails" data-toggle="tab">Event Details</a>
							</li>
							@*<li class="nav-item">
									<a class="nav-link" href="#xxxdetails" data-toggle="tab">xxx Details</a>
								</li>*@
						</ul>
					</div>
					<div class="tab-content">
						<div class="tab-pane active" id="exhibitiondetails">
							<form>
								<div class="form-container">
									<div class="sub-Title my-4">
										Exhibition Details
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.ReceivedById, htmlAttributes: new { @class = "control-label" })
											@Html.DropDownListFor(model => model.ReceivedById, Model.ReceivedBys, "-Select Name-", htmlAttributes: new { @class = "form-control select2-area", style = "width: 100%" })
											@Html.ValidationMessageFor(model => model.ReceivedById, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-6">
											@Html.FEPLabelFor(model => model.ReceivedDate, htmlAttributes: new { @class = "control-label" })
											@Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.Receive_Via, htmlAttributes: new { @class = "control-label" })
											@Html.EditorFor(model => model.Receive_Via, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.Receive_Via, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.Attachments)
											@Html.Partial("_Attachment", Model.Attachments)
											@Html.ValidationMessageFor(model => model.Attachments, "", new { @class = "text-danger" })
										</div>
									</div>

									@* ===Supporting Document=== *@

								</div>
								<!-- End Form -->
							</form>
						</div>

						<div class="tab-pane" id="eventdetails">
							<form>
								<div class="form-container">
									<div class="sub-Title my-4">
										Event Details
									</div>
									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label" })
											@Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.Organiser, htmlAttributes: new { @class = "control-label" })
											@Html.EditorFor(model => model.Organiser, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.Organiser, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.OrganiserEmail, htmlAttributes: new { @class = "control-label col-md-12" })
											@Html.EditorFor(model => model.OrganiserEmail, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.OrganiserEmail, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.AddressStreet1)
											@Html.EditorFor(model => model.AddressStreet1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1" } })
											@Html.ValidationMessageFor(model => model.AddressStreet1, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.EditorFor(model => model.AddressStreet2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1" } })
											@Html.ValidationMessageFor(model => model.AddressStreet2, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-6">
											@Html.EditorFor(model => model.AddressPoscode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Poscode" } })
											@Html.ValidationMessageFor(model => model.AddressPoscode, "", new { @class = "text-danger" })
										</div>
										<div class="form-group col-lg-6">
											@Html.EditorFor(model => model.AddressCity, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
											@Html.ValidationMessageFor(model => model.AddressCity, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(model => model.State)
											@Html.EnumDropDownListFor(model => model.State, "-Select State-", htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
											@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-6">
											@Html.FEPLabelFor(model => model.StartDate)
											@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start" } })
											@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
										</div>
										<div class="form-group col-lg-6">
											@Html.FEPLabelFor(model => model.EndDate)
											@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End" } })
											@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-6">
											@Html.FEPLabelFor(model => model.StartTime)
											@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeSelect", @placeholder = "Date Start" } })
											@Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
										</div>
										<div class="form-group col-lg-6">
											@Html.FEPLabelFor(model => model.EndTime)
											@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeSelect", @placeholder = "Date End" } })
											@Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-6">
											@Html.FEPLabelFor(model => model.ParticipationRequirement, htmlAttributes: new { @class = "control-label col-md-12" })
											@Html.EditorFor(model => model.ParticipationRequirement, new { htmlAttributes = new { @class = "form-control", @placeholder = "No. of Participant" } })
											@Html.ValidationMessageFor(model => model.ParticipationRequirement, "", new { @class = "text-danger" })
										</div>
										<div class="form-group col-lg-6">
											@Html.LabelFor(model => model.ExhibitionStatus)
											@Html.EditorFor(model => model.ExhibitionStatusDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
										</div>
									</div>

									<div class="row">
										<div class="form-group col-lg-12">
											@Html.FEPLabelFor(m => m.NomineeId)
											@Html.ListBoxFor(m => m.NomineeId, Model.Nominees, htmlAttributes: new { @class = "js-example-basic-multiple", style = "width: 100%;" })
											@Html.ValidationMessageFor(m => m.NomineeId)
										</div>
									</div>
								</div>
								<!-- End Form -->
								<!-- Action Button -->
								<!-- End Action Button -->
							</form>
						</div>

					</div>
				</div>
			</div>

			<div class="border-left border-right border-bottom p-3 rounded-bottom">
				<a href='@Url.Action("List")' class="btn btn-default btn-flat">Cancel</a>
				<button class="btn btn-secondary" type="submit">Save</button>
			</div>

		</div>
	</div>
}