@model FEP.Intranet.Areas.eEvent.Models.DetailsMediaInterviewModel

@{
	ViewBag.Title = "Media Interview";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentScript {
	<script type="text/javascript">
		$(document).ready(function () {

			$('#tab_invitation').click(function () {
				$('#invitation-details').show();
				$('#amendment-history').hide();
				$('#interview-details').hide();
				$('#rep-details').hide();
			});

			$('#tab_interview').click(function () {
				$('#invitation-details').hide();
				$('#amendment-history').hide();
				$('#interview-details').show();
				$('#rep-details').hide();
			});

			$('#tab_rep').click(function () {
				$('#invitation-details').hide();
				$('#amendment-history').hide();
				$('#interview-details').hide();
				$('#rep-details').show();
			});

			$('#tab_history').click(function () {
				$('#invitation-details').hide();
				$('#amendment-history').show();
				$('#interview-details').hide();
				$('#rep-details').hide();
			});

		});
	</script>
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "MediaInterview", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Media Interview</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Media Interview Request Ref No: @Model.RefNo</h1>
					@*<div class="header-text">List of created media interview</div>*@
				</div>
			</div>
		</div>
	</div>
}

<h3>Are you sure you want to delete this Media Interview?</h3>
<div class="row">
	<div class="col-xl-3 col-md-3 col-sm-4 my-2">
		<div id="page-nav" class="sidebar-left page-nav">
			<div data-perfect-scrollbar>

				<div class="page-section">
					<h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Request Information</h6>
					<ul class="nav page-nav__menu">
						<li class="nav-item">
							<a id="tab_invitation" href="#invitation-details" data-toggle="tab" class="nav-link active">View Invitation Details</a>
						</li>
						<li class="nav-item">
							<a id="tab_interview" href="#interview-details" data-toggle="tab" class="nav-link active">View Interview Details</a>
						</li>
						<li class="nav-item">
							<a id="tab_rep" href="#rep-details" data-toggle="tab" class="nav-link active">View Recommended Rep. Details</a>
						</li>
						<li class="nav-item">
							<a id="tab_history" href="#amendment-history" data-toggle="tab" class="nav-link active">Amendment History</a>
						</li>
					</ul>
				</div>
			</div>
		</div>
	</div>


	<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
		<!-- Start Form -->
		<div class="border-form rounded-top">
			<div class="form-container tab-content">

				<div class="tab-pane active" id="invitation-details">
					<form>
						<div class="form-container">
							<div class="sub-Title my-4">
								Invitation Details
							</div>
							<div class="row">
								<div class="form-group col-lg-6">
									@Html.LabelFor(model => model.RefNo)
									@Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Reference No", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.RefNo, "", new { @class = "text-danger" })
								</div>
								<div class="form-group col-lg-6">
									@Html.LabelFor(model => model.MediaStatus)
									@{ if (Model.MediaStatus == FEP.Model.MediaStatus.New)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Draft">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.RepAvailable)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Representative Available">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.RepNotAvailable)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Representative Not Available">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.PendingVerified)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Verification">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.Verified)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Approval 1">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.RequireAmendment)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Require Amendment">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.ApprovedByApprover1)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Approval 2">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.ApprovedByApprover2)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Approval 3">
										}
										else if (Model.MediaStatus == FEP.Model.MediaStatus.ApprovedByApprover3)
										{
											<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Approved">
										}
									}
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.MediaName)
									@Html.EditorFor(model => model.MediaName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.MediaName, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.MediaType)
									@Html.EnumDropDownListFor(model => model.MediaType, "-Select Media Type-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", disabled = "disabled" })
									@Html.ValidationMessageFor(model => model.MediaType, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.ContactPerson)
									@Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.ContactNo)
									@Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.AddressStreet1)
									@Html.EditorFor(model => model.AddressStreet1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.AddressStreet1, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.EditorFor(model => model.AddressStreet2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.AddressStreet2, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-6">
									@Html.EditorFor(model => model.AddressPoscode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Poscode", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.AddressPoscode, "", new { @class = "text-danger" })
								</div>
								<div class="form-group col-lg-6">
									@Html.EditorFor(model => model.AddressCity, new { htmlAttributes = new { @class = "form-control", @placeholder = "City", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.AddressCity, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.State)
									@Html.EnumDropDownListFor(model => model.State, "-Select State-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", disabled = "disabled" })
									@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.Email)
									@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.Attachments)
									@Html.Partial("_AttachmentDetails", Model.Attachments)
								</div>
							</div>
						</div>
						<!-- End Form -->
					</form>
				</div>

				<div class="tab-pane" id="interview-details">
					<form>
						<div class="form-container">
							<div class="sub-Title my-4">
								Interview Details
							</div>
							<div class="row">
								<div class="form-group col-lg-6">
									@Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-lg-12" })
									@Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start", disabled = "disabled" } })
								</div>
								<div class="form-group col-lg-6">
									@Html.LabelFor(model => model.DateStart)
									@Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End", disabled = "disabled" } })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-6">
									@Html.LabelFor(model => model.Time)
									@Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control timeSelect", disabled = "disabled" } })
								</div>

								<div class="form-group col-lg-6">
									@Html.LabelFor(model => model.Language)
									@Html.EnumDropDownListFor(model => model.Language, "-Select Language-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", disabled = "disabled" })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.Topic)
									@Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive", @readonly = "readonly" } })
								</div>
							</div>

						</div>
						<!-- End Form -->
					</form>
				</div>

				<div class="tab-pane" id="rep-details">
					<form>
						<div class="form-container">
							<div class="sub-Title my-4">
								Recommended Rep. Details
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.RepUserName)
									@Html.EditorFor(model => model.RepUserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.RepEmail)
									@Html.EditorFor(model => model.RepEmail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.RepMobileNumber)
									@Html.EditorFor(model => model.RepMobileNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								</div>
							</div>

							<div class="row">
								<div class="form-group col-lg-12">
									@Html.LabelFor(model => model.RepDesignation)
									@Html.EditorFor(model => model.RepDesignation, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								</div>
							</div>

						</div>
						<!-- End Form -->
					</form>
				</div>

				<div class="tab-pane" id="amendment-history">
					<div class="mb-4 mt-2 mr-auto">
						<h4 class="color-darkblue mb-0">Amendment History</h4>
						<h6 class="font-weight-normal">Check amendment list here.</h6>
					</div>
				</div>
			</div>

		</div>
		<div class="border-left border-right border-bottom p-3 rounded-bottom">
			@using (Html.BeginForm())
			{

				@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.Id)

				<a href='@Url.Action("List")' style="text-decoration: none;" class="btn btn-warning btn-flat">Cancel</a>
				<button type="submit" class="btn btn-primary">Delete</button>
			}
		</div>
	</div>
</div>







