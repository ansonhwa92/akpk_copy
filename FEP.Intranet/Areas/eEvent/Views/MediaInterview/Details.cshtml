@model FEP.Intranet.Areas.eEvent.Models.DetailsMediaInterviewModel

@{
	ViewBag.Title = "Media Interview";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "MediaInterview", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Media Interview</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Media Interview Details</h1>
					@*<div class="header-text">List of created media interview</div>*@
				</div>
			</div>
		</div>
	</div>

}

<div class="row">
	<div class="col-xl-3 col-md-3 col-sm-4 my-2">
		<div id="page-nav" class="sidebar-left page-nav">
			<div data-perfect-scrollbar>
				<div class="sidebar-inner">
					<ul class="steps steps-vertical nav">
						<li class="step-item complete">
							<a href="#step1" class="step-link" data-toggle="tab">
								<span class="step-number">1</span>
								<span class="step-title">Media Interview List</span>
							</a>
						</li>
						<li class="step-item active">
							<a href="#step2" class="step-link" data-toggle="tab">
								<span class="step-number">2</span>
								<span class="step-title">View Invitation Details</span>
							</a>
						</li>
						<li class="step-item active">
							<a href="#step3" class="step-link" data-toggle="tab">
								<span class="step-number">3</span>
								<span class="step-title">View Interview Details</span>
							</a>
						</li>
						<li class="step-item active">
							<a href="#step4" class="step-link" data-toggle="tab">
								<span class="step-number">4</span>
								<span class="step-title">View Recommended Rep. Details</span>
							</a>
						</li>
						@*<li class="step-item disabled">
								<a href="#step5" class="step-link" data-toggle="tab">
									<span class="step-number">5</span>
									<span class="step-title">Review & Submission</span>
								</a>
							</li>*@
					</ul>
					<!-- End Steps -->
				</div>
			</div>
		</div>
	</div>

	<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
		<!-- Start Form -->
		<div class="border-form rounded-top">
			<form>
				<div class="form-container">
					<div class="mt-2 mb-4 pb-1">
						<h4 class="color-darkblue mb-0">Invitation Details</h4>
						<h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>
					</div>
					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.MediaName, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.MediaName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.MediaName, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.MediaType, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EnumDropDownListFor(model => model.MediaType, "-Select Media Type-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", disabled = "disabled" })
								@Html.ValidationMessageFor(model => model.MediaType, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.AddressStreet1, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.AddressStreet1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.AddressStreet1, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							<div class="col-lg-12">
								@Html.EditorFor(model => model.AddressStreet2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street address line 1", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.AddressStreet2, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							<div class="row col-lg-12">
								<div class="col-lg-6">
									@Html.EditorFor(model => model.AddressPoscode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Poscode", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.AddressPoscode, "", new { @class = "text-danger" })
								</div>
								<div class="col-lg-6">
									@Html.EditorFor(model => model.AddressCity, new { htmlAttributes = new { @class = "form-control", @placeholder = "City", @readonly = "readonly" } })
									@Html.ValidationMessageFor(model => model.AddressCity, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EnumDropDownListFor(model => model.State, "-Select State-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", disabled = "disabled" })
								@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.GetFileName, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.GetFileName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "None" } })
								@Html.ValidationMessageFor(model => model.GetFileName, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<hr />
					<h4 class="color-darkblue mb-0">Interview Details</h4>
					<h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="row col-lg-12">
								<div class="col-lg-6">
									@Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start", disabled = "disabled" } })
									@Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
								</div>
								<div class="col-lg-6">
									@Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End", disabled = "disabled" } })
									@Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-lg-12" })
							@Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control timeSelect" , disabled = "disabled"} })
							@Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
						</div>

						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-lg-12" })
							@Html.EnumDropDownListFor(model => model.Language, "-Select Language-", htmlAttributes: new { @class = "form-control select2", style = "width:100%" , disabled = "disabled"})
							@Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<hr />
					<div class="mt-2 mb-4 pb-1">
						<h4 class="color-darkblue mb-0">Recommended Rep. Details</h4>
						<h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.RepUserId, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.RepUserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.RepUserId, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.RepDesignation, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.RepDesignation, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive", @readonly = "readonly" } })
								@Html.ValidationMessageFor(model => model.RepDesignation, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>

				</div>
			</form>

		</div>
		<div class="border-left border-right border-bottom p-3 rounded-bottom">
			<div class="col-xs-12">
				<a href='@Url.Action("List")' class="btn btn-warning">Back</a>
				<a href='@Url.Action("Edit",new { id = Model.Id })' class="btn btn-primary">Edit</a>
			</div>
		</div>
	</div>
</div>