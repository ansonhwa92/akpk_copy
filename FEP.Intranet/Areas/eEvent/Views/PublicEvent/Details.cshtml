@*@model FEP.Intranet.Areas.eEvent.Models.DetailsPublicEventModel*@
@model FEP.WebApiModel.PublicEvent.PublicEventApprovalModel

@{
	ViewBag.Title = "Public Event";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentScript {
	<script type="text/javascript">
		$(document).ready(function () {

			$('#btnSubmit').click(function (event) {
                var pid = $(this).data('pubid');
                var url = '@Url.Action("SubmitToVerify", "PublicEvent", new { area = "eEvent" })?id=' + pid;
                window.location = url;
            });

			 $('#tab_details').click(function () {
                $('#publicevent-details').show();
				 $('#amendment-history').hide();
				  $('#event-agenda').hide();
			 });

			 $('#tab_agenda').click(function () {
				 $('#publicevent-details').hide();
				  $('#amendment-history').hide();
                $('#event-agenda').show();
            });

            $('#tab_history').click(function () {
                $('#publicevent-details').hide();
				$('#amendment-history').show();
				 $('#event-agenda').hide();
            });

            $('#btnApprove').click(function (event) {
                $("#modalApprove").modal();
                return false;
            });

            function ValidApprove() {
                var aremarks = $('#approval_Remarks').val();
                $('#span_approveremarkserror').hide();
                if (aremarks.trim() == "") {
                    $('#span_approveremarkserror').show();
                    return false;
                }
                return true;
            }

            $('#btnApproveConfirm').click(function (event) {
                // ajax call for approval
                if (!ValidApprove()) {
                    return false;
                }
                $('#approval_Status').val('1');
                $('#approval_ApproverId').val('@CurrentUser.UserId');
				var applevel = $('#approval_Level').val();
				//alert($('#approval_Level').val())
                if (applevel == "Verifier") {
                    $('#approval_RequireNext').val('True');
                }
                else if (applevel == "Approver3") {
                    $('#approval_RequireNext').val('False');
				}
				//alert($('#approval_Status').val());
                $('#myform').submit();
            });

            $('#btnReject').click(function (event) {
                $("#modalReject").modal();
                return false;
            });

            function ValidReject() {
                var rremarks = $('#Reject_Remarks').val();
                $('#span_rejectremarkserror').hide();
                if (rremarks.trim() == "") {
                    $('#span_rejectremarkserror').show();
                    return false;
                }
                return true;
            }

            $('#btnRejectConfirm').click(function (event) {
                // ajax call for approval
                if (!ValidReject()) {
                    return false;
                }
				var rejecttext = $('#Reject_Remarks').val();
				//alert(rejecttext);
                $('#approval_Remarks').val(rejecttext);
                $('#approval_Status').val('2');
                $('#approval_ApproverId').val('@CurrentUser.UserId');
				var applevel = $('#approval_Level').val();
				//alert(applevel);
                if (applevel == "Verifier") {
                    $('#approval_RequireNext').val('True');
                }
                else if (applevel == "Approver3") {
                    $('#approval_RequireNext').val('False');
				}
				//alert($('#approval_RequireNext').val());
                $('#myform').submit();

            });

		});
	</script>
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "PublicEvent", new { area = "eEvent" })' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Public Event</a></li>
								<li class="breadcrumb-item"><a href="#">Public Event Details</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Public Event Request Ref No: @Model.publicevent.RefNo</h1>
					@*<div class="header-text">List of created event</div>*@
				</div>
			</div>
		</div>
	</div>

}

<div class="row">
	<div class="col-xl-3 col-md-3 col-sm-4 my-2">
		<div id="page-nav" class="sidebar-left page-nav">
			<div data-perfect-scrollbar>
				<div class="page-section">
					<h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Request Information</h6>
					<ul class="nav page-nav__menu">
						<li class="nav-item">
							<a id="tab_details" href="#publicevent-details" data-toggle="tab" class="nav-link active">View Public Event Details</a>
						</li>
						<li class="nav-item">
							<a id="tab_agenda" href="#event-agenda" data-toggle="tab" class="nav-link active">Event Agenda</a>
						</li>
						<li class="nav-item">
							<a id="tab_history" href="#amendment-history" data-toggle="tab" class="nav-link active">Amendment History</a>
						</li>
					</ul>
				</div>

				<br />
				<div>
					@if (Model.publicevent.EventStatus == FEP.Model.EventStatus.New && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventAdministratorFED)))
					{
						<a href='@Url.Action("SubmitToVerify", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
						   class="btn btn-primary btn-block mb-2">Submit for Verification</a>
					}
					else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.PendingforVerification && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventVerifierFED)))
					{
						@*<a href='@Url.Action("Verified", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-primary btn-block mb-2 ">Submit for Approval</a>
							<br />
							<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-warning btn-block mb-2">Require Amendment</a>*@

						<p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
						<p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
					}
					else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Verified && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventApprover1)))
					{
						@*<a href='@Url.Action("FirstApproved", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-primary btn-block mb-2 ">Submit for Approval</a>
							<br />
							<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-warning btn-block mb-2">Require Amendment</a>*@

						<p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
						<p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
					}
					else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.VerifiedbyFirstApprover && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventApprover2)))
					{
						@*<a href='@Url.Action("SecondApproved", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-primary  btn-block mb-2">Submit for Approval</a>
							<br />
							<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-warning  btn-block mb-2">Require Amendment</a>*@

						<p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
						<p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
					}
					else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.VerifiedbySecondApprover && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventApprover3)))
					{
						@*<a href='@Url.Action("FinalApproved", "PublicEvent", new { id = Model.publicevent.Id })'
							   class="btn btn-success btn-block mb-2">Approve</a>
							<br />
							<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
							   class="btn btn-warning  btn-block mb-2">Require Amendment</a>*@

						<p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
						<p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
					}
					else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.RequireAmendment && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventAdministratorFED)))
					{
						<a href='@Url.Action("SubmitToVerify", "PublicEvent", new { area = "eEvent", id = Model.publicevent.Id })'
						   class="btn btn-primary  btn-block mb-2">Submit for Verification</a>
					}
					else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Approved && (CurrentUser.HasAccess(FEP.Model.UserAccess.EventAdministratorFED)))
					{
						<a href='@Url.Action("PublishedPublicEvent", "PublicEvent", new { id = Model.publicevent.Id })'
						   class="btn btn-success btn-block mb-2">Publish</a>
					}
				</div>

			</div>
		</div>
	</div>

	<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
		<!-- Start Form -->
		<div class="border-form rounded-top">
			<div class="form-container tab-content">
				<div class="tab-pane active" id="publicevent-details">
					<div class="d-flex align-items-center mb-4 mt-2">
						<h4 class="color-darkblue mr-auto mb-0">Public Event Details<br><span class="small">Review public event details below.</span></h4>
						@if (Model.publicevent.EventStatus == FEP.Model.EventStatus.New || Model.publicevent.EventStatus == FEP.Model.EventStatus.RequireAmendment 
							&& (CurrentUser.HasAccess(FEP.Model.UserAccess.EventAdministratorFED)))
						{
							<a class="btn btn-default btn-sm mw-auto" href="@Url.Action("Edit", "PublicEvent", new { area = "eEvent", @id = Model.publicevent.Id })"><i class="la la-edit color-secondary"></i>&nbsp;&nbsp;Edit</a>
						}
					</div>
					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.publicevent.EventTitle)
							@Html.EditorFor(model => model.publicevent.EventTitle, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive", @readonly = "readonly" } })
						</div>
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.publicevent.EventStatus)
							@{ if (Model.publicevent.EventStatus == FEP.Model.EventStatus.New)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Draft">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.PendingforVerification)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Verification">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Verified)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Approval 1">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.RequireAmendment)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Require Amendment">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.VerifiedbyFirstApprover)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Approval 2">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.VerifiedbySecondApprover)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Pending Approval 3">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Approved)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Approved">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Cancelled)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Cancelled">
								}
								else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Published)
								{
									<input class="form-control bg-warning-ccd" type="text" readonly="readonly" value="Published">
								}

							}
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.publicevent.EventObjective)
							@Html.EditorFor(model => model.publicevent.EventObjective, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.publicevent.StartDate)
							@Html.EditorFor(model => model.publicevent.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start", @disabled = "disabled" } })
						</div>
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.publicevent.EndDate)
							@Html.EditorFor(model => model.publicevent.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End", @disabled = "disabled" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.publicevent.Venue)
							@Html.EditorFor(model => model.publicevent.Venue, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelParticipantType)
						</div>
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelFree)
						</div>
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelNormalFee)
						</div>
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelEarlyBirdFee)
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelIndividual)
						</div>
						<div class="form-group col-lg-3">
							<div class="custom-control custom-checkbox">
								@Html.EditorFor(model => model.publicevent.FreeIndividual, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row" } })
								@Html.LabelFor(model => model.publicevent.FreeIndividual, htmlAttributes: new { @class = "custom-control-label" })
							</div>
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.IndividualFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.IndividualEarlyBird, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelIndividualPaper)
						</div>
						<div class="form-group col-lg-3">
							<div class="custom-control custom-checkbox">
								@Html.EditorFor(model => model.publicevent.FreeIndividualPaper, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row" } })
								@Html.LabelFor(model => model.publicevent.FreeIndividualPaper, htmlAttributes: new { @class = "custom-control-label" })
							</div>
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.IndividualPaperFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.IndividualPaperEarlyBird, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelIndividualPresent)
						</div>
						<div class="form-group col-lg-3">
							<div class="custom-control custom-checkbox">
								@Html.EditorFor(model => model.publicevent.FreeIndividualPresent, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row" } })
								@Html.LabelFor(model => model.publicevent.FreeIndividualPresent, htmlAttributes: new { @class = "custom-control-label" })
							</div>
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.IndividualPresentFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.IndividualPresentEarlyBird, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-3">
							@Html.LabelFor(model => model.publicevent.LabelAgency)
						</div>
						<div class="form-group col-lg-3">
							<div class="custom-control custom-checkbox">
								@Html.EditorFor(model => model.publicevent.FreeAgency, new { htmlAttributes = new { @class = "custom-control-input js-check-selected-row" } })
								@Html.LabelFor(model => model.publicevent.FreeAgency, htmlAttributes: new { @class = "custom-control-label" })
							</div>
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.AgencyFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
						<div class="form-group col-lg-3">
							@Html.EditorFor(model => model.publicevent.AgencyEarlyBird, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						@*<div class="form-group col-lg-6">
								@Html.LabelFor(model => model.publicevent.Fee)
								@Html.EditorFor(model => model.publicevent.Fee, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00", @readonly = "readonly" } })
							</div>*@

						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.publicevent.ParticipantAllowed)
							@Html.EditorFor(model => model.publicevent.ParticipantAllowed, new { htmlAttributes = new { @class = "form-control", @placeholder = "0", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.publicevent.TargetedGroup)
							@Html.EnumDropDownListFor(model => model.publicevent.TargetedGroup, "-Select Group-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", @disabled = "disabled" })
						</div>

						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.publicevent.EventCategoryId)
							@Html.EditorFor(model => model.publicevent.EventCategoryName, new { htmlAttributes = new { @class = "form-control", @placeholder = "0", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.publicevent.SpeakerId)
							@Html.ListBoxFor(model => model.publicevent.SpeakerId, Model.publicevent.SpeakerList, htmlAttributes: new { @class = "js-example-basic-multiple", style = "width: 100%;", @disabled = "disabled" })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.publicevent.ExternalExhibitorId)
							@Html.ListBoxFor(model => model.publicevent.ExternalExhibitorId, Model.publicevent.ExternalExhibitorList, htmlAttributes: new { @class = "js-example-basic-multiple", style = "width: 100%;", @disabled = "disabled" })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.publicevent.Attachments)
							@Html.Partial("_AttachmentDetails", Model.publicevent.Attachments)
						</div>
					</div>
				</div>


				<div id="event-agenda" class="tab-pane">
					<div class="mb-4 mt-2 mr-auto">
						<h4 class="color-darkblue mb-0">Event Agenda</h4>
						<h6 class="font-weight-normal">Check agenda list here.</h6>
					</div>
				</div>


				<div class="tab-pane" id="amendment-history">
					<div class="mb-4 mt-2 mr-auto">
						<h4 class="color-darkblue mb-0">Amendment History</h4>
						<h6 class="font-weight-normal">Check amendment list here.</h6>
					</div>
					<div class="row">
						<div class="form-group col-lg-12">
							<ul class="list-group list-group-fit">
								@if (Model.publicevent.EventStatus != FEP.Model.EventStatus.New)
								{
									if (ViewBag.History.Count != 0)
									{
										var icount = 0;
										foreach (var item in ViewBag.History)
										{
											if (item.Status == FEP.Model.EventApprovalStatus.Rejected)
											{
												icount++;
												<li class="list-group-item pt-4">
													<div class="media align-items-top">
														<div class="media-left">
															<div class="card__avatar">
																<img src="assets/images/people/50/guy-6.jpg" alt="Avatar" class="card__avatar__image">
															</div>
														</div>
														<div class="media-body">
															<div class="card__name-wrap ml-0">
																<div class="card__instructby">@item.ApprovalDate.ToString("dd/MM/yyyy, hh:mm tt") <i class="la la-exclamation-circle text-danger"></i></div>
																<div class="card__author-name">@item.UserName</div>
																<div class="card__text pb-3">@item.Remarks</div>
															</div>
														</div>
													</div>
												</li>
											}
										}
									}
								}
							</ul>
						</div>
					</div>
				</div>


				<!-- Popups -->
				<!-- Start Form -->
				@using (Html.BeginForm("Details", "PublicEvent", FormMethod.Post, new { id = "myform" }))
				{
					@Html.AntiForgeryToken()
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })

					@Html.HiddenFor(model => model.approval.Id)
					@Html.HiddenFor(model => model.approval.EventId)
					@Html.HiddenFor(model => model.approval.Level)
					@Html.HiddenFor(model => model.approval.ApproverId)
					@Html.HiddenFor(model => model.approval.Status)

					<div class="modal fade" id="modalApprove" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
						<div class="modal-dialog modal-sm" role="document">
							<div class="modal-content">
								<div class="modal-body">
									@if (Model.publicevent.EventStatus == FEP.Model.EventStatus.PendingforVerification)
									{
										if (CurrentUser.HasAccess(FEP.Model.UserAccess.EventVerifierFED))
										{
											<h4 class="color-darkblue mb-0 mt-4">Submit for Approval</h4>
											@Html.HiddenFor(model => model.approval.RequireNext, new { htmlAttributes = new { @class = "form-control" } })
										}
									}
									else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Verified || Model.publicevent.EventStatus == FEP.Model.EventStatus.VerifiedbyFirstApprover)
									{
										if (CurrentUser.HasAccess(FEP.Model.UserAccess.EventApprover1) || CurrentUser.HasAccess(FEP.Model.UserAccess.EventApprover2))
										{
											<h4 class="color-darkblue mb-0 mt-4">Next Level Approval</h4>
											<h6 class="font-weight-normal">Do you want to submit to next level approval?</h6>
											<div class="form-group">
												<div class="ml-4">
													<div class="custom-control custom-radio">
														@Html.RadioButtonFor(model => model.approval.RequireNext, true, new { @id = "option1" })
														<label for="option1">Yes, submit to next level approval</label>
													</div>
													<div class="custom-control custom-radio">
														@Html.RadioButtonFor(model => model.approval.RequireNext, false, new { @id = "option2" })
														<label for="option2">No, skip and approve this Public Event</label>
													</div>
												</div>
											</div>
										}
										else if (CurrentUser.HasAccess(FEP.Model.UserAccess.EventApprover3))
										{
											@Html.HiddenFor(model => model.approval.RequireNext, new { htmlAttributes = new { @class = "form-control" } })
										}
									}
									<div class="form-group">
										@Html.LabelFor(model => model.approval.Remarks, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
										<textarea class="form-control" name="Approval.Remarks" id="approval_Remarks" rows="4" placeholder=""></textarea>
										<span class="text-danger field-validation-error" id="span_approveremarkserror" style="display:none;">Please enter Remarks</span>
									</div>
								</div>
								<div class="divider-border"></div>
								<div class="m-4 text-center">
									<button class="btn btn-default font-weight-normal mr-2" data-dismiss="modal" aria-label="Close">Cancel</button>
									<button class="btn btn-secondary" data-toggle="modal" data-dismiss="modal" data-target="#approvalsent" id="btnApproveConfirm">Send</button>
								</div>
							</div>
						</div>
					</div>
					<div class="modal fade" id="modalApproveSent" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
						<div class="modal-dialog modal-sm" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-label="Close">
										<span aria-hidden="true">×</span>
									</button>
								</div>
								<div class="modal-body text-center">
									@if (Model.publicevent.EventStatus == FEP.Model.EventStatus.PendingforVerification)
									{
										<!-- verification (always forwarded) -->
										<img src="~/img/icon-noti-email.svg" alt="image">
										<h4 class="color-darkblue mt-4">Approval Request Sent</h4>
										<p class="small">Your public event approval request has been sent to HOD.</p>
									}
									else if (Model.publicevent.EventStatus == FEP.Model.EventStatus.Verified)
									{
										<!-- approval -->
										<!-- forwarding -->
										<img src="~/img/icon-approval.svg" alt="image">
										<h4 class="color-darkblue mt-4">Approval Request Sent</h4>
										<p class="small">Your public event approval request has been sent to the next Approver.</p>
										<!-- not forwarding -->
										<img src="~/img/icon-approval.svg" alt="image">
										<h4 class="color-darkblue mt-4">Public Event Approved</h4>
										<p class="small">Your public event approval has been notified to CCD.</p>
									}
								</div>
								<!-- Bila xde modal footer -->
								<div class="modal-footer py-0">&nbsp;</div>
							</div>
						</div>
					</div>
					<div class="modal fade" id="modalReject" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
						<div class="modal-dialog modal-sm" role="document">
							<div class="modal-content">
								<div class="modal-body">
									<h4 class="color-darkblue mt-4">Require Amendment</h4>
									<label>Remarks</label> <span class="text-danger">*</span>
									<textarea class="form-control" name="Reject.Remarks" id="Reject_Remarks" rows="4" placeholder=""></textarea>
									<span class="text-danger field-validation-error" id="span_rejectremarkserror" style="display:none;">Please enter Remarks</span>
								</div>
								<div class="divider-border"></div>
								<div class="m-4 text-center">
									<button class="btn btn-default font-weight-normal mr-2" data-dismiss="modal" aria-label="Close">Cancel</button>
									<button class="btn btn-secondary" data-dismiss="modal" data-toggle="modal" data-target="#amendmentsent" id="btnRejectConfirm">Send</button>
								</div>
							</div>
						</div>
					</div>
					<div class="modal fade" id="modalRejectSent" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
						<div class="modal-dialog modal-sm" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-label="Close">
										<span aria-hidden="true">×</span>
									</button>
								</div>
								<div class="modal-body text-center">
									<img src="../img/icon-noti-email.svg" alt="image">
									<h4 class="color-darkblue mt-4">Ammendment Sent</h4>
									<p class="small">Your ammendment request has been sent to CCD.</p>
								</div>
								<!-- Bila xde modal footer -->
								<div class="modal-footer py-0">&nbsp;</div>
							</div>
						</div>
					</div>
				}
				<!-- popups end -->
			</div>
			<!--  Start Action Log -->
			<div class="action-log">
				<h6 class="color-darkblue px-3"><i class="la la-comment color-secondary font-icon align-top"></i>Action Log</h6>
				<!-- Kalau banyak action log akan jd scroll ke bwh -->
				<div data-perfect-scrollbar class="position-relative">
					@if (ViewBag.History.Count != 0)
					{
						var icount = 0;
						foreach (var item in ViewBag.History)
						{
							icount++;
							<div class="border-form rounded mb-2">
								<div class="small text-muted">@item.ApprovalDate.ToString("dd/MM/yyyy")<span class="float-right">@item.ApprovalDate.ToString("hh:mm tt")</span></div>
								@if (item.Status == FEP.Model.EventApprovalStatus.Approved)
								{
									<div class="small"><span class="card__author-name color-darkblue">@item.UserName</span><br><strong>:Designation: Approval Result</strong><br>— <span class="color-green">Approved</span></div>
								}
								else
								{
									<div class="small"><span class="card__author-name color-darkblue">@item.UserName</span><br><strong>:Designation: Approval Result</strong><br>— <span class="color-yellow">Amendment Required</span></div>
								}
								@if (item.Remarks != "")
								{
									<div class="small mt-2"><strong>Remark:</strong> <em>@item.Remarks</em></div>
								}
							</div>
						}

					}
					<div class="border-form rounded mg-2">
						<div class="small text-muted">@Model.publicevent.CreatedDate</div>
						<div class="small"><span class="card__author-name color-darkblue">@Model.publicevent.CreatedByName</span><br>Public Event is created.</div>
					</div>
				</div>
			</div>
			<!--  End Action Log -->
			<!--/form-->
			<!-- End Form -->
		</div>
	</div>
</div>