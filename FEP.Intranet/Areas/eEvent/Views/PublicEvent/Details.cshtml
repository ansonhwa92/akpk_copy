@model FEP.WebApiModel.PublicEvent.DetailsPublicEventModel

@{
	ViewBag.Title = "Public Event";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "PublicEvent", new { area = "eEvent" })' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">Event Management</a></li>
								<li class="breadcrumb-item"><a href="#">Manage Public Event</a></li>
								@if (Model.origin == "toverify")
								{
									<li class="breadcrumb-item"><a href="#">Public Event Details</a></li>
								}
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					@if (Model.origin == "toverify")
					{
						<h1 class="page-title text-white">Public Event Request Ref No: @Model.RefNo</h1>
					}
					else
					{
						<h1 class="page-title text-white">Event Details</h1>
					}
					@*<div class="header-text">List of created event</div>*@
				</div>
			</div>
		</div>
	</div>

}

<div class="row">
	<div class="col-xl-3 col-md-3 col-sm-4 my-2">
		<div class="sidebar-left">
			<!-- Steps -->
			<div class="sidebar-inner sticky">
				<ul class="steps steps-vertical">
					<li class="step-item complete">
						<a href="" class="step-link">
							<span class="step-number">1</span>
							<span class="step-title">List of Public Event</span>
						</a>
					</li>

					<li class="step-item active">
						<a href="" class="step-link">
							<span class="step-number">2</span>
							<span class="step-title">Public Event Details</span>
						</a>
					</li>
					<!-- rejected -->
					<!-- <li class="step-item rejected">
						<a href="" class="step-link">
							<span class="step-number">2</span>
							<span class="step-title">Fill Up Event Details</span>
						</a>
					</li> -->
					@*<li class="step-item disabled">
							<a href="" class="step-link">
								<span class="step-number">3</span>
								<span class="step-title">Event Verification Approval</span>
							</a>
						</li>*@
				</ul>
				<!-- End Steps -->
			</div>
		</div>
	</div>



	<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
		<!-- Start Form -->
		<div class="border-form rounded-top">
			<form>
				<div class="form-container">
					@Html.HiddenFor(model => model.EventStatus)

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.EventTitle)
							@Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.EventObjective)
							@Html.EditorFor(model => model.EventObjective, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							<div class="row col-lg-12">
								<div class="col-lg-6">
									@Html.LabelFor(model => model.StartDate)
									@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Start", @disabled = "disabled" } })
								</div>
								<div class="col-lg-6">
									@Html.LabelFor(model => model.EndDate)
									@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date End", @disabled = "disabled" } })
								</div>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.Venue)
							@*@Html.TextAreaFor(model => model.Venue, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive", @readonly = "readonly" } })*@
							@*@Html.TextAreaFor(model => model.Venue, new { @class = "form-control", rows = 6, @placeholder = "Be clear and descriptive", @readonly = "readonly" })*@
							@Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.Fee)
							@Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00", @readonly = "readonly" } })
						</div>

						<div class="form-group col-lg-6">
							@Html.LabelFor(model => model.ParticipantAllowed)
							@Html.EditorFor(model => model.ParticipantAllowed, new { htmlAttributes = new { @class = "form-control", @placeholder = "0", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.TargetedGroup)
							@Html.EnumDropDownListFor(model => model.TargetedGroup, "-Select Group-", htmlAttributes: new { @class = "form-control select2", style = "width:100%", @disabled = "disabled" })
							@Html.ValidationMessageFor(model => model.TargetedGroup, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.EventCategoryId)
							@Html.EditorFor(model => model.EventCategoryName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.ExternalExhibitorId)
							@Html.EditorFor(model => model.ExternalExhibitorName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>

					<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.SpeakerId)
							@Html.EditorFor(model => model.SpeakerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
						</div>
					</div>


					@*<div class="row">
						<div class="form-group col-lg-12">
							@Html.LabelFor(model => model.GetFileName, htmlAttributes: new { @class = "control-label col-lg-12" })
							<div class="col-lg-12">
								@Html.EditorFor(model => model.GetFileName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @placeholder = "No Attachment Found" } })
							</div>
						</div>
					</div>*@
				</div>
			</form>

		</div>
		<div class="border-left border-right border-bottom p-3 rounded-bottom">
			<div class="col-xs-12">

				@{if (Model.EventStatus == FEP.Model.EventStatus.New || Model.EventStatus == FEP.Model.EventStatus.RejectNeedToEdit)
					{ }
				}

				@if (Model.origin == "fromlist")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
					<a href='@Url.Action("Edit", new { id = Model.Id })' class="btn btn-primary">Edit</a>
				}
				else if (Model.origin == "toverify")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
					<a href='@Url.Action("SubmitToVerify", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-primary">Submit for Verification</a>
				}
				else if (Model.origin == "toapprove1")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
					<a href='@Url.Action("FirstApproved", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-outline-primary">Approve, Submit to next Approval</a>
					<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-warning">Require Amendment</a>
				}
				else if (Model.origin == "toapprove2")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
					<a href='@Url.Action("SecondApproved", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-outline-primary">Approve, Submit to next Approval</a>
					<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-warning">Require Amendment</a>
				}
				else if (Model.origin == "toapprove3")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
					<a href='@Url.Action("FinalApproved", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-success">Approve</a>
					<a href='@Url.Action("RejectPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-warning">Require Amendment</a>
				}
				else if (Model.origin == "amendment")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
					<a href='@Url.Action("SubmitToVerify", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-primary">Submit for Verification</a>
					<a href='@Url.Action("CancelPublicEvent", "PublicEvent", new { area = "eEvent", id = Model.Id })' class="btn btn-danger">Cancel</a>
				}
				else if (Model.origin == "approvedcancel")
				{
					<a href='@Url.Action("List")' class="btn btn-default">Back</a>
				}
			</div>
		</div>
	</div>
</div>

