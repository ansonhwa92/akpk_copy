@model FEP.Intranet.Areas.eEvent.Models.EditPublicEventModel

@{
	ViewBag.Title = "Internal Event";
	Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section ContentScript{
	<script type="text/javascript">
	</script>
}

@section Nav {

	<div class="title_header">
		<div class="title-header-container">
			<div class="container">
				<!-- if have button -->
				<div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "PublicEvent", new { area = "eEvent"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
				<div class="header-col-left">
					<div id="breadcrumb">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb">
								<li class="breadcrumb-item"><a href="#">Home</a></li>
								<li class="breadcrumb-item"><a href="#">e-Event</a></li>
								<li class="breadcrumb-item"><a href="#">Internal Event</a></li>
								<li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
							</ol>
						</nav>
					</div>
					<h1 class="page-title text-white">Edit Event</h1>
					@*<div class="header-text">List of created event</div>*@
				</div>
			</div>
		</div>
	</div>

}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)
	@Html.HiddenFor(model => model.origin)

	<div class="row">
		<div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
			<!-- Start Form -->
			<div class="border-form rounded-top">
				<form>
					<div class="form-container">
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.EventObjective, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.EventObjective, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.EventObjective, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.Venue, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Venue, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.ParticipantAllowed, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EditorFor(model => model.ParticipantAllowed, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.ParticipantAllowed, "", new { @class = "text-danger" })
								</div>
							</div>
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.TargetedGroup, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.EnumDropDownListFor(model => model.TargetedGroup, "-Select Group-", htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
									@Html.ValidationMessageFor(model => model.TargetedGroup, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>

						<div class="row">
							<div class="form-group col-lg-12">
								@Html.LabelFor(model => model.EventCategoryId, htmlAttributes: new { @class = "control-label col-md-12" })
								<div class="col-md-12">
									@Html.DropDownListFor(model => model.EventCategoryId, Model.CategoryList, "-Select Category-", htmlAttributes: new { @class = "form-control select2", style = "width: 100%" })
									@Html.ValidationMessageFor(model => model.EventCategoryId, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>

						@*<div class="row">
								<div class="form-group col-lg-12">
									<label>Proof of Approval</label>
									<div class="custom-file">
										<input type="file" class="custom-file-input" name="file" id="inputfile" multiple />
										<label class="custom-file-label" for="customFile">No file choosen</label>
									</div>
									<div id="fileList"></div>
								</div>
							</div>*@

					</div>
				</form>
				<!-- End Form -->
			</div>
			<div class="border-left border-right border-bottom p-3 rounded-bottom">
				@if (Model.origin == "fromlist")
				{
					<a href='@Url.Action("List")' class="btn btn-warning btn-flat">Cancel</a>
				}
				else
				{
					<a href='@Url.Action("Details", new { id= Model.Id })' class="btn btn-warning btn-flat">Cancel</a>
				}
				<button type="submit" class="btn btn-primary btn-flat">Save</button>
			</div>
		</div>
	</div>
}