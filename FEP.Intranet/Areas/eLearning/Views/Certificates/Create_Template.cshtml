@model CreateTemplateModel

@{
    ViewBag.Title = "Certificate";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}


@section Nav {

    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="#">Home</a></li>
                                <li class="breadcrumb-item"><a href="#">Learning Management</a></li>
                                <li class="breadcrumb-item"><a href="#">Certificate Background</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Certificate Template</h1>
                    @*<div class="header-text">List of certificate background</div>*@
                </div>
            </div>
        </div>
    </div>

}

@using (Html.BeginForm("Create_Template", "Certificates", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-xl-3 col-md-3 col-sm-4 my-2">
            <div class="sidebar-left">
                <!-- Steps -->
                <div class="sidebar-inner sticky">
                    <ul class="steps steps-vertical">
                        <li class="step-item complete">
                            <a href="" class="step-link">
                                <span class="step-number">1</span>
                                <span class="step-title">Add new Template</span>
                            </a>
                        </li>
                    </ul>
                    <!-- End Steps -->
                </div>

                <div class="sidebar-inner sticky">
                    @*<span class="title">Tags</span>*@
                    <div class="card-body">
                        <table class="table" id="tagTable">
                            <tbody>
                                <tr class="table-row clickable-row">
                                    <td>{{StudentName}}</td>
                                </tr>
                                <tr class="table-row clickable-row">
                                    <td>{{CourseName}}</td>
                                </tr>
                                <tr class="table-row clickable-row">
                                    <td>{{DateCompleted}}</td>
                                </tr>
                                
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
            <!-- Start Form -->
            <div class="border-form rounded-top">
                <form>
                    <div class="form-container">
                        <div class="mt-2 mb-4 pb-1">
                            <h4 class="color-darkblue mb-0">New Template</h4>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.FEPLabelFor(model => model.Name)
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="row">
                            <div class="form-group col-lg-12">
                                @Html.FEPLabelFor(model => model.Description)
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Be clear and descriptive" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.FEPLabelFor(model => model.TypePageOrientation)
                                @Html.EnumDropDownListFor(model => model.TypePageOrientation, "-Select-", htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.TypePageOrientation, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-12">
                                @Html.FEPLabelFor(model => model.Template)
                                @*<input asp-for="Template" class="form-control" hidden />
                                <textarea id="summernote" name="editordata"></textarea>*@
                                @Html.TextAreaFor(m => m.Template, new { @class = "summernote form-control", @id = "summernote", @name = "editordata" })
                                @Html.ValidationMessageFor(model => model.Template, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </form>
                <!-- End Form -->
            </div>
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <a href='@Url.Action("Index")' class="btn btn-warning btn-flat">Cancel</a>
                <button class="btn btn-secondary" type="submit">Save</button>
            </div>
        </div>
    </div>
}
    <style>
        .table-row {
            cursor: pointer;
            font-size: 0.7em;
            padding: 0 !important;
        }

        .table .td {
            padding: 0.3em !important;
        }

        tbody {
            display: block;
            max-height: 450px;
            overflow-y: auto;
        }
        .form-container {
            max-width: none !important;
        }
    </style>

@section ContentScript {

    <link href="~/Scripts/summernote/summernote-lite.css" rel="stylesheet" />
    <script src="~/Scripts/summernote/summernote-lite.min.js"></script>

    <script>
        $(document).ready(function () {
            var initMarkup = $('#Template').val();
            console.log(initMarkup);

            $('.summernote').summernote({
                placeholder: 'Type your text here.',
                tabsize: 2,
                height: 300,
                toolbar: [
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['table', ['table']],
                    ['insert', ['link', 'hr']],
                    ['misc', ['fullscreen', 'undo', 'redo', 'codeview']]
                ],
                codeviewFilter: false,
                codeviewIframeFilter: true,
            });

            $('#summernote').summernote('code', initMarkup);

            $(".table-row").click(function (e) {

                e.preventDefault();

                var newText = $.trim($(this).text());
                $('#summernote').summernote('editor.saveRange');

                // Editor loses selected range (e.g after blur)
                $('#summernote').summernote('editor.restoreRange');
                $('#summernote').summernote('editor.focus');
                $('#summernote').summernote('editor.insertText', newText);
            });
        });

        function GetContent() {

            var content = $('#summernote').summernote('code');

            $('#Template').val(content);

            return true;
        }
    </script>
}
