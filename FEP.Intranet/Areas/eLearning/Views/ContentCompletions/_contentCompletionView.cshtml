@using FEP.Model.eLearning
@model FEP.WebApiModel.eLearning.ContentCompletionModel

<form id="formCompletion" action="@BaseURL/ContentCompletions/Post" method="post">

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.CourseId)
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.Title)
    @Html.HiddenFor(m => m.CourseModuleId)
    @Html.HiddenFor(m => m.CompletionType)
    @Html.HiddenFor(m => m.ContentId)
    @Html.HiddenFor(m => m.UserId)

    <div class="text-center">
        @if (Model.CompletionType == ContentCompletionType.ClickButton)
        {
            <button type="submit" class="btn btn-primary pull-right" id="btnComplete" value="Completed">
                <i class="la la-check font-icon" style="font-size: 1.5rem;"></i>Completed.
            </button>
        }

        else if (Model.CompletionType == ContentCompletionType.Timer)
        {

            @Html.HiddenFor(m => m.Timer)

            <div class="btn btn-default pull-left disabled" id="countdown"></div>
            <button type="submit" class="btn btn-default pull-right" id="btnTimerComplete" value="Completed">
                <i class="la la-check font-icon" style="font-size: 1.5rem;"></i>Completed.
            </button>
        }
        else if (Model.CompletionType == ContentCompletionType.AnswerQuestion)
        {

            <h5>Please answer the following question to continue</h5>

            <label>@Model.CourseModuleId</label>
            @Html.EditorFor(m => m.FreeTextAnswer)

            <button type="submit" class="btn btn-default pull-right" id="btnAnswerComplete" value="Completed">
                <i class="la la-check font-icon" style="font-size: 1.5rem;"></i>Completed.
            </button>
        }
    </div>
</form>

<script>
    
    var completionType = document.getElementById("CompletionType");

    console.log("CT ", completionType);

    if (completionType.value == "Timer") {

        var btnTimerComplete = document.getElementById("btnTimerComplete");
        btnTimerComplete.disabled = true;

        var timer = document.getElementById('Timer');

        //console.log("T ", timer.value);

        var currentDateTime = new Date();
        var countDownDate = new Date(currentDateTime.getTime() + timer.value * 1000);

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="countdown"
            //document.getElementById("countdown").innerHTML = days + "d " + hours + "h "
            //    + minutes + "m " + seconds + "s ";
            document.getElementById("countdown").innerHTML = hours + "h "
                + minutes + "m " + seconds + "s ";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                document.getElementById("countdown").innerHTML = "FINISHED";

                document.getElementById("btnTimerComplete").classList.remove("btn-default");
                document.getElementById("btnTimerComplete").classList.add("btn-primary");
                btnTimerComplete.disabled = false;

            }
        }, 1000);
    }
    
</script>