@model FEP.WebApiModel.eLearning.CreateOrEditContentModel
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout1.cshtml";

    var name = Model.Title;

    var desc = Model.ContentType.ToString();

}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5">

                    <a href="~/eLearning/CourseModules/Content/@Model.CourseModuleId" class="btn btn-outline-primary text-white">
                        <span class="align-middle">
                            <i class="la la-long-arrow-left">&nbsp;</i>
                        </span>
                        Back
                    </a>
                </div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Home">eLearning</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Courses">Courses</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/CourseModules/Content/@Model.CourseModuleId">Module</a></li>
                                <li class="breadcrumb-item"><a href="#">Content</a></li>

                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">@name : View @desc</h1>
                    <div class="header-text">View @desc.</div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xl-12 col-md-12 col-sm-12 mt-2 pb-5">

        <!-- Start Form -->
        <div class="border-form rounded-top">

            @if (CurrentUser.HasAccess(FEP.Model.UserAccess.CourseEdit) && Model.Status != FEP.Model.eLearning.CourseStatus.Cancelled)
            {
                <div class="col-sm-12 ">
                    <div class="row float-right">

                        <a href="@Url.Action($"Edit", "CourseContents", new { area = "eLearning", id = Model.Id })"
                           data-toggle="tooltip" data-placement="top" title="Edit"><i class="la la-edit"></i></a>
                        <a href="@Url.Action($"Delete", "CourseContents", new { area = "eLearning", id = Model.Id })"
                           data-toggle="tooltip" data-placement="top" title="Delete"><i class="la la-trash-o"></i></a>
                    </div>
                </div>
            }

            <div class="form-container">

                <div class="form-group">
                    @*<h3>@Model.ModuleName</h3>*@
                    <h4>@Model.Title</h4>
                </div>

                @*@Html.TextAreaFor(model => model.Description, new { @class = "summernote form-control editor" })*@

                @Html.Raw(Model.Description)

                @Html.Partial($"_view{Model.ContentType.ToString()}", Model)



                <hr />

                @Html.Action("Get", "ContentCompletions", new { @contentId = Model.Id })
            </div>
        </div>

        <div class="border-left border-right border-bottom p-3 rounded-bottom">
            <a href="~/eLearning/CourseModules/View/@Model.CourseModuleId" class="btn btn-default" data-toggle="tooltip" data-placement="top"
               title="Back">@Language.General.ButtonBack</a>
        </div>
        @if (Model.IsFeedbackOn > 0)
        {
            if (Model.FeedbackId.HasValue)
            {
                <br />
                <div id="partialView"></div>
                @*@Html.Partial("~/Areas/eLearning/Views/CourseFeedback/_View.cshtml", Model.FeedbackId.Value)*@
                @*@Html.Partial(MVC. $"_View", "CourseFeedback", new { area = "eLearning", id = Model.FeedbackId.Value })*@
                @*@Html.Partial($"_view{Model.ContentType.ToString()}", Model)*@
            }
        }
    </div>
</div>

<style>

    .form-container {
        max-width: none !important;
    }
</style>

@section ContentScript {
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>

<script type="text/javascript">
    var id = @Model.FeedbackId;
    var ison = @Model.IsFeedbackOn;

    if (ison > 0) {
        if (id != null) {
            $("#partialView").load('@Url.Action("_View", "CourseFeedback", new { area = "eLearning"})?id=' + id);
        }
    }
        

        //$(document).ready(function () {
        //    tinymce.init({
        //        selector: '.editor',
        //        plugins: "autoresize",
        //        autoresize_on_init: true,
        //        width: 1200,
        //        height: 800,
        //        menubar: false,
        //        statusbar: false,
        //        toolbar: false,
        //        readonly: true,
        //        relative_urls: false,
        //        remove_script_host: false,
        //        convert_urls: true,
        //        branding: false,
        //    });
        //});

    $(document).ready(function () {   
      
        //$('#FeedbackFrom').submit(function () {
        @*$("#AjaxDARid").submit(function (event) {
            alert("Sukses");
            if ($(this).valid()) {
                $.ajax({
                    url: '@BaseURL/eLearning/CourseFeedback/AddNewFeedbackPost',
                    type: "post",
                    data: $(this).serialize(),
                    success: function (result) {
                        alert("Sukses");
                        onAjaxRequestSuccess(result);
                        location.reload();
                    }
                });
            }
            return false;
        });*@
    });

     function deletethispost(postid) {
            //alert(postid);
            if (postid > 0) {
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("_DeletePost", "CourseFeedback", new { area = "eLearning" })?id=' + postid + '&Uid=' + @CurrentUser.UserId,
                    success: function () {
                        location.reload();
                        //$('#PartialViewLocation').html(data);
                    },
                    error: function (xhr, status, error) {
                        $('#detail').html('');
                    }
                });
            }
        }

    var onAjaxRequestSuccess = function (result) {
        if (result.EnableError) {
        }
        else if (result.EnableSuccess) {
            $('#AjaxDARid').get(0).reset();
            location.reload();
        }
    }

    $(document).ready(function () {

        setTimeout(function () {
            //your code to be executed after 1 second
       
       tinymce.init({
               selector: '#NewPost_Post',
                plugins: 'print preview fullpage paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons',
                imagetools_cors_hosts: ['picsum.photos'],
                menubar: 'file edit view insert format tools table help',
                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview print | insertfile image media link anchor codesample | ltr rtl',
                toolbar_sticky: true,
                autosave_ask_before_unload: true,
                autosave_interval: "30s",
                autosave_prefix: "{path}{query}-{id}-",
                autosave_restore_when_empty: false,
                autosave_retention: "2m",
                image_advtab: true,
                branding: false,

                importcss_append: true,
                file_picker_types: 'file image media',
                file_picker_callback: function (callback, value, meta) {
                    /* Provide file and text for the link dialog */
                    if (meta.filetype === 'file') {
                        callback('https://www.google.com/logos/google.jpg', { text: 'My text' });
                    }

                    /* Provide image and alt text for the image dialog */
                    if (meta.filetype === 'image') {
                        callback('https://www.google.com/logos/google.jpg', { alt: 'My alt text' });
                    }

                    /* Provide alternative source and posted for the media dialog */
                    if (meta.filetype === 'media') {
                        // callback('movie.mp4', { source2: 'alt.ogg', poster: 'https://www.google.com/logos/google.jpg' });

                        // Trigger click on file element
                        jQuery("#fileupload").trigger("click");
                        $("#fileupload").unbind('change');
                        // File selection
                        jQuery("#fileupload").on("change", function () {
                            var file = this.files[0];
                            var reader = new FileReader();

                            // FormData
                            var fd = new FormData();
                            var files = file;
                            fd.append("file", files);
                            fd.append('filetype', meta.filetype);

                            var filename = "";

                            // AJAX
                            var url = '@BaseURL/elearning/File/EditorUpload';
                            console.log('url - ', url);

                            jQuery.ajax({
                                url: url,
                                type: "post",
                                data: fd,
                                contentType: false,
                                processData: false,
                                async: false,
                                success: function (response) {
                                    //console.log('filename-', response);
                                    filename = response.location;
                                    alert(response.location);
                                }
                            });

                            reader.onload = function (e) {
                                callback(filename);
                            };
                            reader.readAsDataURL(file);
                        });
                    }
                },

                width: 820,
                height: 240,
                image_caption: true,
                quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
                noneditable_noneditable_class: "mceNonEditable",
                toolbar_drawer: 'sliding',
                contextmenu: "link image imagetools table",
                images_upload_url: '@BaseURL/elearning/File/EditorUpload',
                images_upload_base_path: '@BaseURL/eLearning',
                images_upload_credentials: true,
                relative_urls: false,
                remove_script_host: false,
                convert_urls: true,

                init_instance_callback: function (editor) {

                    editor.on('BeforeSetContent', function (e) {
                        console.log(e.content);

                        if (e.content.indexOf("video ") > 0) {
                            if (e.content.indexOf(".pdf") > 0) {
                                e.content = e.content.replace("<video", "<div");

                                var width = e.content.match("width=\"(.*)\" height");
                                var height = e.content.match("height=\"(.*)\" controls");
                               console.log('width - ', width, ' height - ', height);

                                e.content = e.content.replace("controls=\"controls\"", "");

                                e.content = e.content.replace("<source", "<object");
                                e.content = e.content.replace("src=", "data=");
                                console.log('middle - ', e.content);

                                e.content = e.content.replace("</video", "</div");
                                e.content = e.content.replace("/>", "type=\"application/pdf\" width=\"" + width[1] + "\" height=\"" + height[1] + "\"  ></object>");
                            }

                            console.log('after - ', e.content);
                        }
                    });
                },
            });
        }, 1500);
        });

         @*var uploadImgUrl = '@(BaseURL)/eLearning/File/UploadFile';
        var getImgUrl = '@(BaseURL)/eLearning/File/GetImg/?fileName=';


       // var uploadDocUrl = '@(WebApiURL)/eLearning/File/';
        var uploadDocUrl = '@(BaseURL)/eLearning/File/UploadFile';
        var convertFileUrl = '@(BaseURL)eLearning/File/DocToHTML';*@
         @*function LoadTInyMCE() {
           tinymce.init({
               selector: '#NewPost_Post',
                plugins: 'print preview fullpage paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons',
                imagetools_cors_hosts: ['picsum.photos'],
                menubar: 'file edit view insert format tools table help',
                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview print | insertfile image media link anchor codesample | ltr rtl',
                toolbar_sticky: true,
                autosave_ask_before_unload: true,
                autosave_interval: "30s",
                autosave_prefix: "{path}{query}-{id}-",
                autosave_restore_when_empty: false,
                autosave_retention: "2m",
                image_advtab: true,
                branding: false,

                importcss_append: true,
                file_picker_types: 'file image media',
                file_picker_callback: function (callback, value, meta) {
                    /* Provide file and text for the link dialog */
                    if (meta.filetype === 'file') {
                        callback('https://www.google.com/logos/google.jpg', { text: 'My text' });
                    }

                    /* Provide image and alt text for the image dialog */
                    if (meta.filetype === 'image') {
                        callback('https://www.google.com/logos/google.jpg', { alt: 'My alt text' });
                    }

                    /* Provide alternative source and posted for the media dialog */
                    if (meta.filetype === 'media') {
                        // callback('movie.mp4', { source2: 'alt.ogg', poster: 'https://www.google.com/logos/google.jpg' });

                        // Trigger click on file element
                        jQuery("#fileupload").trigger("click");
                        $("#fileupload").unbind('change');
                        // File selection
                        jQuery("#fileupload").on("change", function () {
                            var file = this.files[0];
                            var reader = new FileReader();

                            // FormData
                            var fd = new FormData();
                            var files = file;
                            fd.append("file", files);
                            fd.append('filetype', meta.filetype);

                            var filename = "";

                            // AJAX
                            var url = '@BaseURL/elearning/File/EditorUpload';
                            console.log('url - ', url);

                            jQuery.ajax({
                                url: url,
                                type: "post",
                                data: fd,
                                contentType: false,
                                processData: false,
                                async: false,
                                success: function (response) {
                                    //console.log('filename-', response);
                                    filename = response.location;
                                    alert(response.location);
                                }
                            });

                            reader.onload = function (e) {
                                callback(filename);
                            };
                            reader.readAsDataURL(file);
                        });
                    }
                },

                width: 720,
                height: 240,
                image_caption: true,
                quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
                noneditable_noneditable_class: "mceNonEditable",
                toolbar_drawer: 'sliding',
                contextmenu: "link image imagetools table",
                images_upload_url: '@BaseURL/elearning/File/EditorUpload',
                images_upload_base_path: '@BaseURL/eLearning',
                images_upload_credentials: true,
                relative_urls: false,
                remove_script_host: false,
                convert_urls: true,

                init_instance_callback: function (editor) {

                    editor.on('BeforeSetContent', function (e) {
                        console.log(e.content);

                        if (e.content.indexOf("video ") > 0) {
                            if (e.content.indexOf(".pdf") > 0) {
                                e.content = e.content.replace("<video", "<div");

                                var width = e.content.match("width=\"(.*)\" height");
                                var height = e.content.match("height=\"(.*)\" controls");
                               console.log('width - ', width, ' height - ', height);

                                e.content = e.content.replace("controls=\"controls\"", "");

                                e.content = e.content.replace("<source", "<object");
                                e.content = e.content.replace("src=", "data=");
                                console.log('middle - ', e.content);

                                e.content = e.content.replace("</video", "</div");
                                e.content = e.content.replace("/>", "type=\"application/pdf\" width=\"" + width[1] + "\" height=\"" + height[1] + "\"  ></object>");
                            }

                            console.log('after - ', e.content);
                        }
                    });
                },
            });
        }*@


</script>

@*<script type="text/javascript" src="~/js/tinymce_cfg.js" id="tmscript" baseUrl="@(BaseURL)"></script>*@
}