
@using FEP.Model.eLearning
@model FEP.WebApiModel.eLearning.CreateOrEditContentModel

<div>
    <div class="form-group">
        <label>@Language.eLearning.Content.CompletionCriteria</label>        

        <div class="">
            <!-- Default inline 1-->
            <div class="custom-control completion-radio custom-control-inline">

                <input type="radio" class="custom-control-input clickButton" checked="checked" 
                       value=@ContentCompletionType.ClickButton id="completionType1"
                       name="CompletionType">
                <label class="custom-control-label" for="completionType1">@Language.eLearning.Enum.ClickButton</label>
            </div>
            <!-- Default inline 2-->
            <div class="custom-control completion-radio custom-control-inline">

                <input type="radio" class="custom-control-input timer" 
                       value=@ContentCompletionType.Timer  id="completionType2"
                       name="CompletionType">
                <label class="custom-control-label" for="completionType2">@Language.eLearning.Enum.Timer</label>
            </div>

            <div class="custom-control completion-radio custom-control-inline">

                <input type="radio" class="custom-control-input answerQuestion" 
                       value=@ContentCompletionType.AnswerQuestion id="completionType3"
                       name="CompletionType">
                <label class="custom-control-label" for="completionType3">@Language.eLearning.Enum.AnswerQuestion</label>
            </div>
        </div>

        <div class="questionWrapper">
            @Html.LabelFor(model => model.ContentQuestionId, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ContentQuestionId, ViewBag.Questions as SelectList, "Select Question", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContentQuestionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="timerWrapper">
            @Html.LabelFor(model => model.Timer, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Timer, new { htmlAttributes = new { @class = "form-control", @type="text", @placeholder="In seconds"} })
                @Html.ValidationMessageFor(model => model.Timer, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
