@using FEP.Model.eLearning
@model FEP.WebApiModel.eLearning.CreateOrEditContentModel

@Html.Partial("_contentCompletion", Model)
<hr />


@Html.HiddenFor(m => m.UploadFileName)
<div class="form-group">
    <label>@Language.eLearning.Content.SelectVideo</label>
    <div class="col-sm-12">

        <!-- Default inline 1-->
        <div class="video-radio row pl-4">

            <div class="col-sm-4 pt-2">
                <input type="radio" class="custom-control-input exVideo" checked="checked" value=@VideoType.ExternalVideo
                       id="video1"
                       name="VideoType">
                <label class="custom-control-label" for="video1">@Language.eLearning.Enum.ExternalVideo</label>
            </div>
            <div class="form-group exVideoWrapper col-sm-8">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control", @placeholder = "YouTube Url" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

            <!-- Default inline 2-->
            <div class=" video-radio row pl-4 ">

                <div class="col-sm-4 pt-2">
                    <input type="radio" class="custom-control-input upVideo" value=@VideoType.UploadVideo
                           id="video2"
                           name="VideoType">
                    <label class="custom-control-label" for="video2">@Language.eLearning.Enum.UploadVideo</label>
                </div>
                <div class="form-group upVideoWrapper col-sm-8">
                    <div class="custom-file">
                        <input name="FileName" id="FileName" type="file" class="custom-file-input" > 
                        <label for="FileName" class="custom-file-label text-truncate">
                            @{ 
                                if (String.IsNullOrEmpty(Model.UploadFileName))
                                {
                                    <text>Choose File..</text>
                                }
                                else
                                {
                                    <text>@Model.UploadFileName</text>
                                    }
                                }
                        </label>
                    </div>

                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                </div>
            </div>      
    </div>
</div>