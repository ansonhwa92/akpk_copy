@model FEP.WebApiModel.eLearning.CreateOrEditModuleModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";

    var name = Model.CourseTitle;
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href="~/eLearning/Courses/Content/@Model.Id" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Home">eLearning</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Courses">Courses</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Courses/Content/@Model.Id">Courses</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">@name : Add Module</h1>
                    <div class="header-text">Add new module.</div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.CourseId)
    @Html.HiddenFor(m => m.CreatedBy, new { Value = CurrentUser.UserId })

    <div class="row">
        <div class="col-xl-3 col-md-3 col-sm-4 my-2">
            <div id="page-nav" class="sidebar-left page-nav">
                <div data-perfect-scrollbar class="ps">
                    <div class="page-section">
                        <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Course</h6>
                        <ul class="nav page-nav__menu">
                            <li class="nav-item">
                                <a href="#" class="nav-link active">Add Module</a>
                            </li>

                        </ul>
                    </div>

                </div>
            </div>
        </div>


        <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
            <!-- Start Form -->
            <div class="border-form rounded-top">
                <div class="form-container">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })<span class="text-danger">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })<span class="text-danger">*</span>
                        <div class="">

                            @Html.TextAreaFor(m => m.Description, new { @class = "summernote form-control" })

                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Objectives, htmlAttributes: new { @class = "control-label " })
                        <div class="">

                            @Html.TextAreaFor(m => m.Objectives, new { @class = "summernote form-control" })

                            @Html.ValidationMessageFor(model => model.Objectives, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="border-left border-right border-bottom p-3 rounded-bottom">

                <a class="btn btn-default" href="@Url.Action("Content", "Courses", new { area = "eLearning", id = Model.CourseId })" data-toggle="tooltip" data-placement="top" title="Back">@Language.General.ButtonBack</a>
                <button type="submit" class="btn btn-default pull-right" id="btnSave" name="Submittype" value="Save"><i class="la la-save font-icon" style="font-size: 1.5rem;"></i>Save</button>

            </div>
        </div>
    </div>
}

<style>
    .form-container {
        max-width: none !important;
    }
</style>


@section ContentScript {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="~/Scripts/summernote/summernote-lite.css" rel="stylesheet" />
    <script src="~/Scripts/summernote/summernote-lite.min.js"></script>
    <script src="~/js/elearn.js"></script>

    <script>
        var uploadImgUrl = '@(BaseURL)/eLearning/File/UploadFile';
        var getImgUrl = '@(BaseURL)/eLearning/File/GetImg/?fileName=';

        $(document).ready(function () {
            $('#Description').summernote({
                placeholder: 'Type your text here.',
                tabsize: 2,
                height: 200,
                toolbar: [
                    //[groupName, [list of button]],
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['insert', ['link', 'picture']],

                ],
                codeviewFilter: false,
                codeviewIframeFilter: true,
                callbacks: {
                    onFocus: function () {
                        currentElement = "body";
                    },
                    onImageUpload: function (files, editor, $editable) {
                        uploadFile(uploadImgUrl, files[0], function (message) {

                            var remoteUrl = getImgUrl + message.FileNameOnStorage;

                            $('#Description').summernote('insertImage', remoteUrl, message.FileName);

                        });
                    }
                }
            });

            $('#Objectives').summernote({
                placeholder: 'Type your text here.',
                tabsize: 2,
                height: 200,
                toolbar: [
                    //[groupName, [list of button]],
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['insert', ['link', 'picture']],

                ],
                codeviewFilter: false,
                codeviewIframeFilter: true,
                callbacks: {
                    onFocus: function () {
                        currentElement = "body";
                    },
                    onImageUpload: function (files, editor, $editable) {
                        uploadFile(uploadImgUrl, files[0], function (message) {

                            var remoteUrl = getImgUrl + message.FileNameOnStorage;

                            $('#Objectives').summernote('insertImage', remoteUrl, message.FileName);

                        });
                    }
                }
            });
        });
    </script>
}
