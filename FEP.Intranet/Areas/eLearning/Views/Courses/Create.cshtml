@model FEP.WebApiModel.eLearning.CreateOrEditCourseModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href="~/eLearning/Courses" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Home">eLearning</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Courses">Course</a></li>
                                <li class="breadcrumb-item"><a href="#">Create Course</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Create Course</h1>
                    <div class="header-text">Create new course.</div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @*@Html.HiddenFor(m => m.Id)*@
    @Html.HiddenFor(m => m.CreatedBy, new { Value = CurrentUser.UserId })
    @*<input type="hidden" name="CreatedBy" id="CreatedBy" value="@CurrentUser.UserId">*@

    <div class="row">
        @*<div class="col-xl-3 col-md-3 col-sm-4 my-2">
            <div class="sidebar-left">
                <!-- Steps -->
                <div class="sidebar-inner sticky">
                    <ul class="steps steps-vertical">
                        <li class="step-item active">
                            <a href="" class="step-link">
                                <span class="step-number">1</span>
                                <span class="step-title">Fill in new course information</span>
                            </a>
                        </li>
                        <li class="step-item disabled">
                            <a href="" class="step-link">
                                <span class="step-number">2</span>
                                <span class="step-title">Configure Course Criteria</span>
                            </a>
                        </li>
                        <li class="step-item disabled">
                            <a href="" class="step-link">
                                <span class="step-number">3</span>
                                <span class="step-title">Add Contents</span>
                            </a>
                        </li>
                        <li class="step-item disabled">
                            <a href="" class="step-link">
                                <span class="step-number">4</span>
                                <span class="step-title">Review and Approvals</span>
                            </a>
                        </li>
                    </ul>
                    <!-- End Steps -->
                </div>
            </div>
        </div>*@

        <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
            <!-- Start Form -->
            <div class="border-form rounded-top">
                <div class="form-container">
                    <p>Information mark with(<span class="t-red">*</span>) is mandatory.</p>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })<span class="t-red">*</span>
                        <div class="">
                            @Html.DropDownListFor(m => m.CategoryId, ViewBag.Categories as SelectList, "Select Category", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })<span class="t-red">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })<span class="t-red">*</span>
                        <div class="">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.Objectives, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.TextAreaFor(model => model.Objectives, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Objectives, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Medium, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.Medium, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Medium, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.ScheduleType, htmlAttributes: new { @class = "control-label " })
            <div class="">
                @Html.EnumDropDownListFor(model => model.ScheduleType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ScheduleType, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label " })
                        <div class="row">
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-9">
                                @Html.EnumDropDownListFor(model => model.DurationType, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DurationType, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.Language, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsFree, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsFree)
                                Yes
                                @Html.ValidationMessageFor(model => model.IsFree, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ViewCategory, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.ViewCategory, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ViewCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="border-left border-right border-bottom p-3 rounded-bottom">
                        <input type="submit" value="Create" class="btn btn-default" />
                        @*  <button type="submit" class="btn btn-default" id="btnSave" name="Submittype" value="Save"><i class="la la-save font-icon" style="font-size: 1.5rem;"></i>Save as Draft</button>*@
                    </div>

                    @*<div class="form-group">
            <div class="col-md-offset-2 ">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section ContentScript {
    @Scripts.Render("~/bundles/jqueryval")
}