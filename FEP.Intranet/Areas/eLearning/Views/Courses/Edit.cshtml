@model FEP.WebApiModel.eLearning.CreateOrEditCourseModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Nav{
    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href="~/eLearning/Courses" class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Home">eLearning</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Courses">Course</a></li>
                                <li class="breadcrumb-item"><a href="#">Create Course</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Create Course</h1>
                    <div class="header-text">Create new course.</div>
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.CreatedBy, new { Value = CurrentUser.UserId })

    @Html.HiddenFor(m => m.IsFree)

    <div class="row">

        @Html.Partial("_contentSidebar")

        <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">
            <!-- Start Form -->
            <div class="border-form rounded-top col-sm-12">
                <div class="form-container form-container-w100">
                    <h6 class="font-weight-normal">Information marked with (<span class="text-danger">*</span>) is mandatory.</h6>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                        <div class="">
                            @Html.DropDownListFor(m => m.CategoryId, ViewBag.Categories as SelectList, "Select Category", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })<span class="text-danger">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })<span class="text-danger">*</span>
                        <div class="">

                            @Html.TextAreaFor(m => m.Description, new { @class = "summernote form-control" })

                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Objectives, htmlAttributes: new { @class = "control-label " })
                        <div class="">

                            @Html.TextAreaFor(m => m.Objectives, new { @class = "summernote form-control" })

                            @Html.ValidationMessageFor(model => model.Objectives, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Medium, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.Medium, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Medium, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label " })
                        <div class="row">
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Duration, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   @onkeypress = "return isNumberKey(event)",
                                   @type = "text"
                               }
                           })
                                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-9">
                                @Html.EnumDropDownListFor(model => model.DurationType, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DurationType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.Language, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>@Language.eLearning.Course.IsFree</label>
                        <div class="col-sm-12">

                            <!-- Default inline 1-->
                            <div class="free-radio row pl-4 pb-2">
                                <div class="col-sm-2">
                                    <input type="radio" class="custom-control-input free  form-control " checked="checked" value="@Model.IsFree"
                                           id="free" name="IsFree">
                                    <label class="custom-control-label control-label" for="free">@Language.eLearning.Course.Free</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <!-- Default inline 2-->
                            <div class="free-radio row pl-4 ">
                                <div class="col-sm-2">
                                    <input type="radio" class="custom-control-input paid form-control" value="@Model.IsFree"
                                           id="paid" name="IsFree">
                                    <label class="custom-control-label control-label" for="paid">@Language.eLearning.Course.Paid</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control",
                           @onkeypress = "return isNumberKey(event)",
                           @type = "text"
                       } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ViewCategory, htmlAttributes: new { @class = "control-label " })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.ViewCategory, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ViewCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="border-left border-right border-bottom p-3 rounded-bottom">

                <a class="btn btn-default" href="@Url.Action("Index", "Courses", new { area = "eLearning" })" data-toggle="tooltip" data-placement="top" title="Back">@Language.General.ButtonBack</a>
                <button type="submit" class="btn btn-default pull-right" id="btnSave" name="Submittype" value="Save"><i class="la la-save font-icon" style="font-size: 1.5rem;"></i>Save</button>
            </div>
        </div>
    </div>
}

<style>
    .form-container {
        max-width: none !important;
    }
</style>

@section ContentScript {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="~/Scripts/summernote/summernote-lite.css" rel="stylesheet" />
    <script src="~/Scripts/summernote/summernote-lite.min.js"></script>
    <script src="~/js/elearn.js"></script>

    <script>
        $(document).ready(function () {
            $('.summernote').summernote({
                placeholder: 'Type your text here.',
                tabsize: 2,
                height: 150,
                toolbar: [

                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],

                ],
                codeviewFilter: false,
                codeviewIframeFilter: true,

            });

            var isFree = $('input[name=IsFree]');

            $('#free').val($('#IsFree').val());

            if ($('#free').val() == "True") {
                $("#free").prop("checked", true);
                $('#Price').prop("disabled", true);

                ($('input[name=IsFree]').val(true));

            } else {

                $("#paid").prop("checked", true);
                $('#Price').prop("disabled", false);

                ($('input[name=IsFree]').val(false));
            }
        });

        $('.free-radio input[type="radio"]').change(function () {

            if ($(this).hasClass("free")) {
                $("#free").prop("checked", true);
                $('#Price').prop("disabled", true);

                ($('input[name=IsFree]').val(true));

            } else {

                $("#paid").prop("checked", true);
                $('#Price').prop("disabled", false);

                ($('input[name=IsFree]').val(false));
            }
        });
    </script>

}