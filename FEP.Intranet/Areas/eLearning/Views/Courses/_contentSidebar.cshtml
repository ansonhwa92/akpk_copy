@using FEP.Model.eLearning
@using FEP.Model

<div class="col-xl-3 col-md-3 col-sm-4 my-2">
    <div id="page-nav" class="sidebar-left page-nav">

        @if (CurrentUser.HasAccess(UserAccess.CourseCreate) && Model.Status != CourseStatus.Cancelled)
        {
            <div data-perfect-scrollbar class="ps">
                <div class="page-section">
                    <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Course</h6>
                    <ul class="nav page-nav__menu">
                        <li class="nav-item">
                            <a href="@Url.Action("Content", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Content</a>
                        </li>
                        <li class="nav-item">
                            <a href="@Url.Action("EditRules", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Rules And Path </a>
                        </li>
                        <!-- firus -->
                        <li class="nav-item">
                            <a href="@Url.Action("AdditionalInput", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Additional Input </a>
                        </li>
                        <li class="nav-item">
                            <a href="@Url.Action("Trainers", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Instructors</a>
                        </li>
                        <li class="nav-item">
                            <a href="@Url.Action("UsersProgress", "CourseEnrollments", new { area = "eLearning", id = @Model.Id })" class="nav-link">Users And Progress</a>
                        </li>
                        <li class="nav-item">
                            <a href="@Url.Action("AssignCertificate", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Certificate</a>
                        </li>

                        @if (Model.Status == CourseStatus.Published)
    {
                    <li class="nav-item">
                        <a href="@Url.Action("Index", "CourseEvents", new { area = "eLearning", @courseId = @Model.Id })" class="nav-link">Sessions</a>
                    </li>
}
                    </ul>
                </div>
            </div>
        }
        @{
            switch (Model.Status)
            {
                case CourseStatus.Amendment:
                case CourseStatus.Draft:

                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <div data-perfect-scrollbar class="ps">
                            <div class="page-section">
                                <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Add content</h6>
                                <ul class="nav page-nav__menu">
                                    <li class="nav-item">
                                        <a class="nav-link" href="@Url.Action("Create", "CourseModules",
                                                                new { area = "eLearning", id = @Model.Id,
                                                                    courseTitle = Model.Title })">
                                            Module
                                        </a>
                                    </li>

                                    @foreach (int val in Enum.GetValues(typeof(CourseContentType)))
                                    {
                                        if (val == (int)CourseContentType.Powerpoint ||
                                               val == (int)CourseContentType.Assignment ||
                                               val == (int)CourseContentType.Instructor)
                                        {
                                            continue;
                                        }

                                        <li class="nav-item">
                                            <a href="@Url.Action("Create", "CourseContents",
                                                new
                                                {
                                                    area = "eLearning",
                                                    courseId = Model.Id,
                                                    courseTitle = Model.Title,
                                                    courseContentType = val,
                                                    createContentFrom = (int)CreateContentFrom.CourseFrontPage
                                                })" class="nav-link">
                                                @Enum.GetName(typeof(CourseContentType), val)
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }

                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <p>
                            <a href="@Url.Action("StartTrial", "CourseEvents", new { area = "eLearning", id = @Model.Id })" class="btn btn-secondary btn-block mb-2">
                                Start Trial
                            </a>
                        </p>
                        <p>
                            <a href="@Url.Action("SubmitForVerification", "CourseApprovals", new { area = "eLearning", id = @Model.Id, @title = Model.Title })" class="btn btn-default btn-block mb-2">
                                Submit For Approval
                            </a>
                        </p>

                        <form method="post" id="formCancelCourse">
                            <p><button class="btn btn-warning btn-block mb-2" id="btnCancelCourse" type="button" onclick="confirmCancel()">Cancel Course Creation</button></p>
                        </form>

                    }

                    break;
                case CourseStatus.Trial:

                    <div class="page-section">
                        <h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Course</h6>
                        <ul class="nav page-nav__menu">
                            <li class="nav-item">
                                <a id="tab_details" href="#course-trial" data-toggle="tab" class="nav-link active">Trial</a>
                            </li>
                        </ul>
                    </div>

                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <p>
                            <a href="@Url.Action("StopTrial", "CourseEvents", new { area = "eLearning", id = @Model.Id })" class="btn btn-secondary btn-block mb-2">
                                Stop Trial
                            </a>
                        </p>
                        <p>
                            <a href="@Url.Action("Learners", "CourseEvents", new { area = "eLearning", id = @Model.Id, @courseStatus = CourseStatus.Trial })" class="btn btn-default btn-block mb-2">
                                Assign Learners For Trial
                            </a>
                        </p>

                    }
                    break;

                case CourseStatus.Approved:

                    if (CurrentUser.HasAccess(UserAccess.CoursePublish))
                    {
                        <form method="post" id="formPublish">
                            <p><button class="btn btn-primary btn-block" id="btnPublish" type="button" onclick="publish()">Publish</button></p>
                        </form>
                    }

                    break;

                case CourseStatus.Published:

                    if (CurrentUser.HasAccess(UserAccess.CoursePublish))
                    {

                        if (Model.ViewCategory == ViewCategory.Private)
                        {
                            @*<p><button class="btn btn-default btn-block" id="btnInviteStudent" onclick="createGroup">Invite Group of Students</button></p>
                            *@
                            <p>
                                <a href="@Url.Action("Create", "CourseEvents", new { area = "eLearning", id = @Model.Id, title = Model.Title })" class="btn btn-primary btn-block mb-2">
                                    <i class="la la-plus font-icon" style="font-size: 1.5rem;"></i>Session
                                </a>
                            </p>
                        }
                    }

                    break;

                default:
                    break;
            }
        }
    </div>
</div>