@using FEP.Model.eLearning
@using FEP.Model

<div class="col-xl-3 col-md-3 col-sm-4 my-2">
    <div id="page-nav" class="sidebar-left page-nav">

        @{
            switch (Model.Status)
            {
                case CourseStatus.Amendment:
                case CourseStatus.Draft:
                    <div data-perfect-scrollbar class="ps">
                        <div class="page-section">
                            <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Course</h6>
                            <ul class="nav page-nav__menu">
                                <li class="nav-item">
                                    <a href="@Url.Action("Content", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Content</a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("EditRules", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Rules And Path </a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("Trainers", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Instructors</a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("Users", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Users And Progress</a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("AssignCertificate", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Certificate</a>
                                </li>
                            </ul>
                        </div>
                    </div>

        <!-- TODO : FUTURE IF IN TRIAL MODE DONT SHOW THE ADD CONTENT -->
                    <div data-perfect-scrollbar class="ps">
                        <div class="page-section">
                            <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Add content</h6>
                            <ul class="nav page-nav__menu">
                                <li class="nav-item">
                                    <a class="dropdown-item" href="@Url.Action("Create", "CourseModules", new { area = "eLearning", id = @Model.Id, courseTitle = Model.Title })">Module</a>
                                </li>

                                @foreach (int val in Enum.GetValues(typeof(CourseContentType)))
                                {
                                    switch ((CourseContentType)val)
                                    {

                                        case CourseContentType.Audio:
                                        case CourseContentType.Document:
                                        case CourseContentType.Flash:
                                        case CourseContentType.IFrame:
                                        case CourseContentType.Pdf:
                                        case CourseContentType.RichText:
                                        case CourseContentType.Video:
                                            <li class="nav-item">
                                                <a href="@Url.Action("Create", "CourseContents",
                                            new
                                            {
                                                area = "eLearning",
                                                courseId = Model.Id,
                                                courseTitle = Model.Title,
                                                courseContentType = val,
                                                createContentFrom = (int)CreateContentFrom.CourseFrontPage
                                            })" class="nav-link">
                                                    @Enum.GetName(typeof(CourseContentType), val)
                                                </a>
                                            </li>
                                            break;

                                        default:
                                            break;

                                    }

                                }
                            </ul>
                        </div>
                    </div>

                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <p>
                            <a href="@Url.Action("StartTrial", "CourseEvents", new { area = "eLearning", id = @Model.Id })" class="btn btn-secondary btn-block mb-2">
                                Start Trial
                            </a>
                        </p>
                        <p>
                            <a href="@Url.Action("SubmitForVerification", "CourseApprovals", new { area = "eLearning", id = @Model.Id, @title = Model.Title })" class="btn btn-default btn-block mb-2">
                                Submit For Approval
                            </a>
                        </p>
                        <p>
                            <a href="@Url.Action("View", "Course", new { area = "eLearning", id = @Model.Id })" class="btn btn-default btn-block mb-2">
                                View
                            </a>
                        </p>

                    }

                    break;
                case CourseStatus.Trial:

                    <div class="page-section">
                        <h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Course</h6>
                        <ul class="nav page-nav__menu">
                            <li class="nav-item">
                                <a id="tab_details" href="#course-trial" data-toggle="tab" class="nav-link active">Trial</a>
                            </li>
                        </ul>
                    </div>

                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <p>
                            <a href="@Url.Action("StopTrial", "CourseEvents", new { area = "eLearning", id = @Model.Id })" class="btn btn-secondary btn-block mb-2">
                                Stop Trial
                            </a>
                        </p>
                        <p>
                            <a href="@Url.Action("Learners", "CourseEvents", new { area = "eLearning", id = @Model.Id, @courseStatus = CourseStatus.Trial })" class="btn btn-default btn-block mb-2">
                                Assign Learners For Trial
                            </a>
                        </p>

                    }
                    break;

                @*case CourseStatus.Submitted:
                case CourseStatus.Verify:
                case CourseStatus.FirstApproval:
                case CourseStatus.SecondApproval:
                case CourseStatus.ThirdApproval:

                    <div class="page-section">
                        <h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Course</h6>
                        <ul class="nav page-nav__menu">
                            <li class="nav-item">
                                <a id="tab_details" href="#course-trial" data-toggle="tab" class="nav-link active">Approvals</a>
                            </li>
                        </ul>
                    </div>

                    if (CurrentUser.HasAccess(UserAccess.CourseVerify) || CurrentUser.HasAccess(UserAccess.CourseApproval1) ||
                         CurrentUser.HasAccess(UserAccess.CourseApproval2) || CurrentUser.HasAccess(UserAccess.CourseApproval3))
                    {
                        <p>
                            <a href="@Url.Action("SubmitForApproval", "CourseApprovals", new { area = "eLearning", id = @Model.Id })" class="btn btn-default btn-block mb-2">
                                Submit For Approval
                            </a>
                        </p>

                        <p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
                    }

                    break;*@

                case CourseStatus.Approved:

                    <div class="page-section">
                        <h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Course</h6>
                        <ul class="nav page-nav__menu">
                            <li class="nav-item">
                                <a id="tab_details" href="#course-trial" data-toggle="tab" class="nav-link active">Publish</a>
                            </li>
                        </ul>
                    </div>

                    if (CurrentUser.HasAccess(UserAccess.CoursePublish))
                    {
                        <p>
                            <a href="@Url.Action("Publish", "Courses", new { area = "eLearning", id = @Model.Id, title = Model.Title })" class="btn btn-default btn-block mb-2">
                                Publish
                            </a>
                        </p>
                    }

                    break;

                case CourseStatus.Published:

                    <div class="page-section">
                        <h6 class="x-small color-darkblue"><i class="la la-info-circle font-icon color-secondary align-bottom"></i> Course</h6>
                        <ul class="nav page-nav__menu">
                            <li class="nav-item">
                                <a id="tab_details" href="#course-trial" data-toggle="tab" class="nav-link active">Published</a>
                            </li>
                        </ul>
                    </div>

                    if (CurrentUser.HasAccess(UserAccess.CoursePublish))
                    {

                        <form method="post" id="formOpen">
                            <p><button class="btn btn-default btn-block" id="btnOpenPublic" onclick="openPublic()">Open to Public</button></p>
                            <p><button class="btn btn-default btn-block" id="btnOpenPrivate" onclick="openPrivate()">Open to Private Group</button></p>

                        </form>

                        <p><button class="btn btn-default btn-block" id="btnInviteStudent" onclick="inviteStudents">Invite Student</button></p>
                    }

                    break;

                default:
                    break;
            }
        }
    </div>
</div>