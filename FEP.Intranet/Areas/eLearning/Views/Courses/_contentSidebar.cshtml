@using FEP.Model.eLearning
@using FEP.Model

<div class="col-xl-3 col-md-3 col-sm-4 my-2">
    <div id="page-nav" class="sidebar-left page-nav">
        <div data-perfect-scrollbar class="ps">
            <div class="page-section">
                <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Course</h6>
                <ul class="nav page-nav__menu">
                    <li class="nav-item">
                        <a href="@Url.Action("Content", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Content</a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("EditRules", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Rules And Path </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Trainers", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Trainers</a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Users", "Courses", new { area = "eLearning", id = @Model.Id })" class="nav-link">Users And Progress</a>
                    </li>
                </ul>
            </div>
        </div>

        <div data-perfect-scrollbar class="ps">
            <div class="page-section">
                <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i>Add content</h6>
                <ul class="nav page-nav__menu">
                    <li class="nav-item">
                        <a class="dropdown-item" href="@Url.Action("Create", "CourseModules", new { area = "eLearning", id = @Model.Id, courseTitle= Model.Title })">Module</a>
                    </li>

                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.RichText,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Rich Text
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.IFrame,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            IFrame
                        </a>
                    </li>

                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Document,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Document
                        </a>
                    </li>

                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Video,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Video
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Audio,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Audio
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Flash,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Flash
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Pdf,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Pdf
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Test,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Test
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="@Url.Action("Create", "CourseContents",
                                new { area = "eLearning", courseId = Model.Id, courseTitle = Model.Title,
                                    courseContentType = (int) CourseContentType.Assignment,
                                    createContentFrom = (int) CreateContentFrom.CourseFrontPage})" class="nav-link">
                            Web link
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <div>
            @{
                if (Model.Status == CourseStatus.Draft)
                {
                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <p>
                            <a href="@Url.Action("StartTrial", "Courses", new { area = "eLearning", id = @Model.Id })" class="btn btn-primary">
                                Go to Trial Mode
                            </a>
                        </p>

                    }
                }
                if (Model.Status == CourseStatus.Trial)
                {
                    if (CurrentUser.HasAccess(UserAccess.CourseCreate))
                    {
                        <p>
                            <a href="@Url.Action("StopTrial", "Courses", new { area = "eLearning", id = @Model.Id })" class="btn btn-danger">
                                Stop Trial
                            </a>
                        </p>
                        <p>
                            <a href="@Url.Action("AssignLearner", "Courses", new { area = "eLearning", id = @Model.Id })" class="btn btn-primary">
                               Assign Learners For Trial
                            </a>
                        </p>

                    }
                }

                if (Model.Status == CourseStatus.Submitted)
                {
                    if (CurrentUser.HasAccess(UserAccess.CourseVerify))
                    {
                        <p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
                        <p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
                    }
                }
                else if (Model.Status == CourseStatus.Verified)
                {
                    if (CurrentUser.HasAccess(UserAccess.CourseApproval1) && Model.Approval.Level == FEP.Model.eLearning.ApprovalLevel.Approver1)
                    {
                        <p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
                        <p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
                    }
                    else if (CurrentUser.HasAccess(UserAccess.CourseApproval2) && Model.Approval.Level == FEP.Model.eLearning.ApprovalLevel.Approver2)
                    {
                        <p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
                        <p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
                    }
                    else if (CurrentUser.HasAccess(UserAccess.CourseApproval3) && Model.Approval.Level == FEP.Model.eLearning.ApprovalLevel.Approver3)
                    {
                        <p><button class="btn btn-secondary btn-block mb-2" id="btnApprove">Submit for Approval</button></p>
                        <p><button class="btn btn-default btn-block" id="btnReject">Require Amendment</button></p>
                    }
                }
            }
        </div>
    </div>
</div>