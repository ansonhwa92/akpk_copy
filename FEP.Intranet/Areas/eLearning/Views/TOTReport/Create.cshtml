@model FEP.Intranet.Areas.eLearning.Models.CreateTOTReportModel

@{
    ViewBag.Title = "Train Of Trainer Report - Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@section Contentscript{
    <script type="text/javascript">

        $(document).ready(function () {

            RefreshFile();

            $('select[name=CourseId]').change(function () {
                getCourseModules(this.value);
            });

            $("#StartDate").flatpickr({
			    dateFormat: "d/m/Y",
			    enableTime: false,
			    minDate: "today",
			    onValueUpdate: function (dObj, dStr, fp, dayElem) {
				    debugger;
				    $("#EndDate").flatpickr({
					    dateFormat: "d/m/Y",
					    enableTime: false,
					    minDate: dStr,
				    });
			    }
		    });

		    $("#EndDate").flatpickr({
			    dateFormat: "d/m/Y",
			    enableTime: false,
			    minDate: "today",
		    });


        });

        function getCourseModules(courseId) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCourseModules", "TOTReport", new { area = "eLearning" })?id=" + courseId,
                contentType: "text/plain",
                dataType: "json",
                success: function (result) {

                    $("#ModuleId").html('');
                    $('#ModuleId').append($('<option></option>').val('').html('@Language.TOT.PlaceholderModule'))

                    if (result != '[]')
                    {
                        $.each($.parseJSON(result), function (i, module) {
                            $('#ModuleId').append($('<option></option>').val(module.Id).html(module.Name))
                        });
                    }
                },
                error: function (response) {
                    $("#ModuleId").html('');
                    $('#ModuleId').append($('<option></option>').val('').html('@Language.TOT.PlaceholderModule'))
                }
            });


        }

    </script>
}

@section Nav {

    <div class="title_header">
        <div class="title-header-container">
            <div class="container">
                <!-- if have button -->
                <div class="header-col-right float-right mt-5"><a href='@Url.Action("List", "TOTReport", new { area = "eLearning"})' class="btn btn-outline-primary text-white"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> Back</a></div>
                <div class="header-col-left">
                    <div id="breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="~/Home">Home</a></li>
                                <li class="breadcrumb-item"><a href="~/eLearning/Home">eLearning</a></li>
                                <li class="breadcrumb-item"><a href="#">Train Of Trainer</a></li>
                                <li class="breadcrumb-item active" aria-current="page"><a href="#"></a></li>
                            </ol>
                        </nav>
                    </div>
                    <h1 class="page-title text-white">Add Report</h1>
                    @*<div class="header-text">List of created event</div>*@
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="col-xl-3 col-md-3 col-sm-4 my-2">
        <div id="page-nav" class="sidebar-left page-nav">
            <div data-perfect-scrollbar>
                <div class="page-section">
                    <h6 class="x-small color-darkblue"><i class="la la-edit font-icon color-secondary align-bottom"></i> Report</h6>
                    <ul class="nav page-nav__menu">
                        <li class="nav-item">
                            <a href="#" data-toggle="tab" class="active nav-link">Create New</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-9 col-md-9 col-sm-8 mt-2 pb-5">

        @using (Html.BeginForm("Create", "TOTReport", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="border-form rounded-top">

                @Html.AntiForgeryToken()

                <div class="form-container">
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(model => model.CourseId)
                            @Html.DropDownListFor(model => model.CourseId, Model.Courses, Language.TOT.PlaceholderCourse, htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(model => model.ModuleId)
                            @Html.DropDownListFor(model => model.ModuleId, Model.Modules, Language.TOT.PlaceholderModule, htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.StartDate)
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.EndDate)
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.StartTime)
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control timeSelect" } })
                            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.EndTime)
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control timeSelect" } })
                            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(model => model.Venue)
                            @Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Venue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.NoOfMale)
                            @Html.EditorFor(model => model.NoOfMale, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoOfMale, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.NoOfFemale)
                            @Html.EditorFor(model => model.NoOfFemale, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoOfFemale, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.AgeRange)
                            @Html.EnumDropDownListFor(model => model.AgeRange, Language.TOT.PlaceholderAgeRange, htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.AgeRange, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.FEPLabelFor(model => model.SalaryRange)
                            @Html.EnumDropDownListFor(model => model.SalaryRange, Language.TOT.PlaceholderSalaryRange, htmlAttributes: new { @class = "form-control select2", style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.SalaryRange, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.FEPLabelFor(model => model.Attachments)
                            @Html.Partial("_Attachment", Model.Attachments)
                            @Html.ValidationMessageFor(model => model.Attachments, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>
            <div class="border-left border-right border-bottom p-3 rounded-bottom">
                <a href="@Url.Action("List")" class="btn btn-default mr-2">Back</a>
                <button class="btn btn-secondary" type="submit">Save</button>
            </div>

        }

    </div>

</div>