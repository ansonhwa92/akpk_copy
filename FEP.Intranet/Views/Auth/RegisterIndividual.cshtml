@model  RegisterIndividualModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutAuth.cshtml";
}

@section ButtonBack{

    <a href="@Url.Action("Register", "Auth", new { area = "" })" class="btn btn-outline-secondary"><span class="align-middle"><i class="la la-long-arrow-left">&nbsp;</i></span> @Language.General.ButtonBack</a>

}

@section ContentScript{

    <script type="text/javascript">

        $(document).ready(function () {

            $('input[type=radio][name=IsMalaysian]').change(function () {
                if (this.value == 'true') {
                    $(".malaysian").removeClass("d-none");
                    $(".non-malaysian").addClass("d-none");

                    getCountryCode(@Model.MalaysiaCountryId);
                }
                else if (this.value == 'false') {
                    $(".non-malaysian").removeClass("d-none");
                    $(".malaysian").addClass("d-none");

                    $("select#CountryId").trigger("change");
                }
            });

            $('select#CountryId').change(function () {

                getCountryCode(this.value);

            });


        });

        function getCountryCode(countryId) {

            $.ajax({
                type: "GET",
                url: "@(WebApiURL)Administration/Country?id="+countryId,                        
                contentType: "text/plain",
                dataType: "json",
                success: function (result) {                   
                    $('span#countrycode').html(result.CountryCode);
                },
                error: function (response) {
                    
                }
            });

        }

    </script>

}

<div class="login-wrapper" style="min-height: 100vh">
    <div class="col-sm-8 col-md-6 col-lg-4 mx-auto pt-3 mw-600">
        <div class="card">
            <div class="card-header text-center">
                <h4 class="color-darkblue mb-1 mt-2">Individual</h4>
                <p>Create an account to get started. It's free!</p>
            </div>
            <div class="card-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-inline mb-2">
                        <div class="custom-control custom-radio">
                            @Html.RadioButtonFor(m => m.IsMalaysian, "true", new { @class = "custom-control-input", id = "yes" })
                            <label class="custom-control-label mr-3" for="yes">@Language.Auth.FieldMalaysian</label>
                        </div>
                        <div class="custom-control custom-radio ml-5">
                            @Html.RadioButtonFor(m => m.IsMalaysian, "false", new { @class = "custom-control-input", id = "no" })
                            <label class="custom-control-label" for="no">@Language.Auth.FieldNonMalaysian</label>
                        </div>
                    </div>

                    <div class="form-group non-malaysian @if (Model.IsMalaysian) { <text>d-none</text> }">
                        @Html.FEPLabelFor(m => m.CitizenshipId, htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <span class="select-arrow">
                                @Html.DropDownListFor(m => m.CitizenshipId, Model.Citizenships, Language.Auth.PlaceholderCitizenship, htmlAttributes: new { @class = "custom-select" })
                            </span>
                            @Html.ValidationMessageFor(m => m.CitizenshipId)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.Name, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderName } })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>

                    <div class="malaysian  @if (!Model.IsMalaysian) { <text>d-none</text> }">
                        <div class="form-group">
                            @Html.FEPLabelFor(m => m.ICNo, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.ICNo, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderICNo } })
                            @Html.ValidationMessageFor(m => m.ICNo)
                        </div>
                    </div>

                    <div class="non-malaysian @if (Model.IsMalaysian) { <text>d-none</text> }">
                        <div class="form-group">
                            @Html.FEPLabelFor(m => m.PassportNo, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.PassportNo, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderPassportNo } })
                            @Html.ValidationMessageFor(m => m.PassportNo)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.Address1, htmlAttributes: new { @class = "form-label" })
                        <div class="row">
                            <div class="col">
                                <div class="mb-3">
                                    @Html.EditorFor(m => m.Address1, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderAddress1 } })
                                    @Html.ValidationMessageFor(m => m.Address1)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="mb-3">
                                    @Html.EditorFor(m => m.Address2, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderAddress2 } })
                                    @Html.ValidationMessageFor(m => m.Address2)
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col malaysian @if (!Model.IsMalaysian) { <text>d-none</text> }">
                                @Html.EditorFor(m => m.PostCodeMalaysian, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderPostCode } })
                                @Html.ValidationMessageFor(m => m.PostCodeMalaysian)
                            </div>
                            <div class="col non-malaysian @if (Model.IsMalaysian) { <text>d-none</text> }">
                                @Html.EditorFor(m => m.PostCodeNonMalaysian, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderPostCode } })
                                @Html.ValidationMessageFor(m => m.PostCodeNonMalaysian)
                            </div>
                            <div class="col">
                                @Html.EditorFor(m => m.City, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderCity } })
                                @Html.ValidationMessageFor(m => m.City)
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <div class="malaysian @if (!Model.IsMalaysian) { <text>d-none</text> }">
                                    <span class="select-arrow">
                                        @Html.DropDownListFor(m => m.StateId, Model.States, Language.Auth.PlaceholderStateId, htmlAttributes: new { @class = "custom-select" })
                                    </span>
                                    @Html.ValidationMessageFor(m => m.StateId)
                                </div>
                                <div class="non-malaysian @if (Model.IsMalaysian) { <text>d-none</text> }">
                                    @Html.EditorFor(m => m.State, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderStateId } })
                                    @Html.ValidationMessageFor(m => m.State)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="malaysian @if (!Model.IsMalaysian) { <text>d-none</text> }">
                                    @Html.TextBox("Country", "Malaysia", htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                    @Html.HiddenFor(m => m.MalaysiaCountryId)
                                </div>
                                <div class="non-malaysian @if (Model.IsMalaysian) { <text>d-none</text> }">
                                    <span class="select-arrow">
                                        @Html.DropDownListFor(m => m.CountryId, Model.Countries, Language.Auth.PlaceholderCountryId, htmlAttributes: new { @class = "custom-select" })
                                    </span>
                                    @Html.ValidationMessageFor(m => m.CountryId)
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.MobileNo, htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="countrycode">@Html.Raw(Model.CountryCode)</span>
                            </div>
                            @Html.EditorFor(m => m.MobileNo, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderMobileNo } })
                        </div>
                        @Html.ValidationMessageFor(m => m.MobileNo)
                    </div>
                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.Email, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Language.Auth.PlaceholderEmail } })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>

                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.Password, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control form-control-prepended", placeholder = Language.Auth.PlaceholderPassword } })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                    <div class="form-group">
                        @Html.FEPLabelFor(m => m.RetypePassword, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(m => m.RetypePassword, new { htmlAttributes = new { @class = "form-control form-control-prepended", placeholder = Language.Auth.PlaceholderRetypePassword } })
                        @Html.ValidationMessageFor(m => m.RetypePassword)
                    </div>

                    <div class="form-group text-center mb-0">
                        <div class="custom-control custom-checkbox">
                            @Html.EditorFor(m => m.IsTermAgreed, new { htmlAttributes = new { @class = "custom-control-input" } })
                            <label for="IsTermAgreed" class="custom-control-label">I agree to the <a href="#">Terms of Use</a></label>
                        </div>
                        @Html.ValidationMessageFor(m => m.IsTermAgreed)
                    </div>

                    <button type="submit" class="btn btn-secondary btn-block mt-3">Sign Up</button>

                }
            </div>
            <div class="card-footer text-center">Already signed up? <a href="@Url.Action("Login", "Auth", new { area = "" })" class="font-weight-bold">Login</a></div>

        </div>
    </div>
</div>

