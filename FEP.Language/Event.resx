<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExRoadEndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="ExRoadEndTime" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="ExRoadEventName" xml:space="preserve">
    <value>Event Name</value>
  </data>
  <data name="ExRoadExhibitionStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ExRoadLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ExRoadOrganiser" xml:space="preserve">
    <value>Organiser Name</value>
  </data>
  <data name="ExRoadParticipantRequirement" xml:space="preserve">
    <value>Participant Requirement</value>
  </data>
  <data name="ExRoadReceivedById" xml:space="preserve">
    <value>Received By</value>
  </data>
  <data name="ExRoadReceivedByName" xml:space="preserve">
    <value>Received By</value>
  </data>
  <data name="ExRoadReceivedDate" xml:space="preserve">
    <value>Received Date</value>
  </data>
  <data name="ExRoadReceive_Via" xml:space="preserve">
    <value>Receive via</value>
  </data>
  <data name="ExRoadStartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="ExRoadStartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="ExRoadExhibitionStatusDesc" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ExRoadReceivedBys" xml:space="preserve">
    <value>Received By</value>
  </data>
  <data name="SpEmail" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="SpExperience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="SpPhoneNo" xml:space="preserve">
    <value>Phone No.</value>
  </data>
  <data name="SpType" xml:space="preserve">
    <value>Speaker Type</value>
  </data>
  <data name="SpUserId" xml:space="preserve">
    <value>Speaker Name</value>
  </data>
  <data name="SpUserName" xml:space="preserve">
    <value>Speaker Name</value>
  </data>
  <data name="SpTypeDesc" xml:space="preserve">
    <value>Speaker Type</value>
  </data>
  <data name="SpAttachment" xml:space="preserve">
    <value>Support Document</value>
  </data>
  <data name="SpAttachmentName" xml:space="preserve">
    <value>Support Document</value>
  </data>
  <data name="SpPicture" xml:space="preserve">
    <value>Profile Picture</value>
  </data>
  <data name="SpPictureName" xml:space="preserve">
    <value>Profile Picture</value>
  </data>
  <data name="ExhibitorEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ExhibitorName" xml:space="preserve">
    <value>Exhibitor Name</value>
  </data>
  <data name="ExhibitorPhoneNo" xml:space="preserve">
    <value>Phone No.</value>
  </data>
  <data name="ExhibitorRemark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="ExRoadNomineeId" xml:space="preserve">
    <value>Select Nominees</value>
  </data>
  <data name="ExRoadNomineeName" xml:space="preserve">
    <value>Select Nominees</value>
  </data>
  <data name="PubEventCategoryId" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="PubEventCategoryName" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="PubEventEndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="PubEventExternalExhibitorId" xml:space="preserve">
    <value>External Exhibitors</value>
  </data>
  <data name="PubEventExternalExhibitorName" xml:space="preserve">
    <value>External Exhibitors</value>
  </data>
  <data name="PubEventFee" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="PubEventObjective" xml:space="preserve">
    <value>Event Objective</value>
  </data>
  <data name="PubEventParticipantAllowed" xml:space="preserve">
    <value>Participant Allowed</value>
  </data>
  <data name="PubEventRemarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="PubEventStartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="PubEventStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="PubEventStatusDesc" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="PubEventTargetedGroup" xml:space="preserve">
    <value>Targeted Group</value>
  </data>
  <data name="PubEventTitle" xml:space="preserve">
    <value>Event Title </value>
  </data>
  <data name="PubEventVenue" xml:space="preserve">
    <value>Venue</value>
  </data>
  <data name="PubEventSpeakerId" xml:space="preserve">
    <value>Speakers</value>
  </data>
  <data name="PubEventSpeakerName" xml:space="preserve">
    <value>Speakers</value>
  </data>
  <data name="PubEventRefNo" xml:space="preserve">
    <value>Reference No</value>
  </data>
  <data name="ExhibitorCompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="SpStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SpStatusDesc" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AgendaDescription" xml:space="preserve">
    <value>Descriptions</value>
  </data>
  <data name="AgendaEventRefNo" xml:space="preserve">
    <value>Event Reference No.</value>
  </data>
  <data name="AgendaPersonInCharge" xml:space="preserve">
    <value>Person In-Charge</value>
  </data>
  <data name="AgendaSupportDocument" xml:space="preserve">
    <value>Support Document</value>
  </data>
  <data name="AgendaTentative" xml:space="preserve">
    <value>Tentative</value>
  </data>
  <data name="AgendaTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="AgendaTitle" xml:space="preserve">
    <value>Agenda Session</value>
  </data>
  <data name="ExRoadRefNo" xml:space="preserve">
    <value>Reference No</value>
  </data>
  <data name="ExRoadExhibitionSupDoc" xml:space="preserve">
    <value>Supporting Document</value>
  </data>
  <data name="ExRoadOrganiserEmail" xml:space="preserve">
    <value>Organiser Email</value>
  </data>
  <data name="ReqEventCategory" xml:space="preserve">
    <value>Event Category</value>
  </data>
  <data name="ReqEventObjective" xml:space="preserve">
    <value>Event Objective</value>
  </data>
  <data name="ReqEventRefNo" xml:space="preserve">
    <value>Reference No.</value>
  </data>
  <data name="ReqEventTitle" xml:space="preserve">
    <value>Event Title</value>
  </data>
  <data name="ReqReason" xml:space="preserve">
    <value>Modification/Cancellation Reasons</value>
  </data>
  <data name="ReqStatus" xml:space="preserve">
    <value>Request Status</value>
  </data>
  <data name="ReqType" xml:space="preserve">
    <value>Request Type</value>
  </data>
  <data name="AttBookingNumber" xml:space="preserve">
    <value>Booking Number</value>
  </data>
  <data name="AttCheckInStatus" xml:space="preserve">
    <value>Check-in Status</value>
  </data>
  <data name="AttCompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="AttEventId" xml:space="preserve">
    <value>Event Reference No</value>
  </data>
  <data name="AttICNo" xml:space="preserve">
    <value>MyKad Number</value>
  </data>
  <data name="AttName" xml:space="preserve">
    <value>Attendee Name</value>
  </data>
  <data name="AttType" xml:space="preserve">
    <value>Register Type</value>
  </data>
  <data name="AttUserId" xml:space="preserve">
    <value>Attendee Name</value>
  </data>
  <data name="AttUserType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="PubEventAgencyFree" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="PubEventIndividualFree" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="PubEventIndividualPaperFree" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="PubEventIndividualPresentFree" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="PubEventLabelEarlyBirdFee" xml:space="preserve">
    <value>Early Bird Fee (RM)</value>
  </data>
  <data name="PubEventLabelFree" xml:space="preserve">
    <value>Free ?</value>
  </data>
  <data name="PubEventLabelNormalFee" xml:space="preserve">
    <value>Normal Fee (RM)</value>
  </data>
  <data name="PubEventLabelParticipantType" xml:space="preserve">
    <value>Participant Type</value>
  </data>
  <data name="PubEventLabelAgency" xml:space="preserve">
    <value>Agency Rep.</value>
  </data>
  <data name="PubEventLabelIndividual" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="PubEventLabelIndividualPaper" xml:space="preserve">
    <value>Individual w/ Paper</value>
  </data>
  <data name="PubEventLabelIndividualPresent" xml:space="preserve">
    <value>Individual w/ Paper To Present</value>
  </data>
  <data name="MediaRepDesignation" xml:space="preserve">
    <value>Designation</value>
  </data>
  <data name="MediaRepEmail" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="MediaRepMobileNumber" xml:space="preserve">
    <value>Mobile Number</value>
  </data>
  <data name="MediaRepUserName" xml:space="preserve">
    <value>Rep. Name</value>
  </data>
</root>