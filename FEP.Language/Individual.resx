<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlertActivateFail" xml:space="preserve">
    <value>Fail to activate user account</value>
  </data>
  <data name="AlertActivateSuccess" xml:space="preserve">
    <value>User account successfully activated</value>
  </data>
  <data name="AlertCreateFail" xml:space="preserve">
    <value>Fail to register user</value>
  </data>
  <data name="AlertCreateSuccess" xml:space="preserve">
    <value>User successfully registered. User will receive email with sign in details and link to activate the account.</value>
  </data>
  <data name="AlertDeactivateFail" xml:space="preserve">
    <value>Fail to disable user account</value>
  </data>
  <data name="AlertDeactivateSuccess" xml:space="preserve">
    <value>User account successfully disable</value>
  </data>
  <data name="AlertDeleteFail" xml:space="preserve">
    <value>Fail to delete user account</value>
  </data>
  <data name="AlertDeleteSuccess" xml:space="preserve">
    <value>User account successfully delete</value>
  </data>
  <data name="AlertEditFail" xml:space="preserve">
    <value>Fail to update user record</value>
  </data>
  <data name="AlertEditSuccess" xml:space="preserve">
    <value>User record successfully updated</value>
  </data>
  <data name="AlertResetFail" xml:space="preserve">
    <value>Fail to reset user account password</value>
  </data>
  <data name="AlertResetSuccess" xml:space="preserve">
    <value>User account password successfully reset. User will receive email with link to reset account password</value>
  </data>
  <data name="FieldAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="FieldCitizenship" xml:space="preserve">
    <value>Citizenship</value>
  </data>
  <data name="FieldCity" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="FieldCountryId" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="FieldEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FieldICNo" xml:space="preserve">
    <value>IC Number</value>
  </data>
  <data name="FieldICPassportNo" xml:space="preserve">
    <value>IC / Passport Number</value>
  </data>
  <data name="FieldMalaysian" xml:space="preserve">
    <value>Malaysian</value>
  </data>
  <data name="FieldMobileNo" xml:space="preserve">
    <value>Mobile Number</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FieldNonMalaysian" xml:space="preserve">
    <value>Non Malaysian</value>
  </data>
  <data name="FieldPassportNo" xml:space="preserve">
    <value>Passport Number</value>
  </data>
  <data name="FieldPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="FieldPostCode" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="FieldRole" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="FieldStateId" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="FieldStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="PlaceholderAddress1" xml:space="preserve">
    <value>Street address line 1</value>
  </data>
  <data name="PlaceholderAddress2" xml:space="preserve">
    <value>Street address line 2</value>
  </data>
  <data name="PlaceholderCitizenship" xml:space="preserve">
    <value>Select Citizenship</value>
  </data>
  <data name="PlaceholderCity" xml:space="preserve">
    <value>Enter City</value>
  </data>
  <data name="PlaceholderCountryId" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="PlaceholderEmail" xml:space="preserve">
    <value>Enter Email</value>
  </data>
  <data name="PlaceholderICNo" xml:space="preserve">
    <value>Enter IC Number</value>
  </data>
  <data name="PlaceholderMobileNo" xml:space="preserve">
    <value>Enter Mobile Number</value>
  </data>
  <data name="PlaceholderName" xml:space="preserve">
    <value>Enter Name</value>
  </data>
  <data name="PlaceholderPassportNo" xml:space="preserve">
    <value>Enter Passport Number</value>
  </data>
  <data name="PlaceholderPostCode" xml:space="preserve">
    <value>Enter Postcode</value>
  </data>
  <data name="PlaceholderStateId" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="ValidIsExistEmail" xml:space="preserve">
    <value>Email already registered in the system</value>
  </data>
  <data name="ValidIsExistICNo" xml:space="preserve">
    <value>IC Number already registered in the system</value>
  </data>
  <data name="ValidIsExistPassportNo" xml:space="preserve">
    <value>Passport Number already registered in the system</value>
  </data>
  <data name="ValidLengthICNo" xml:space="preserve">
    <value>Entered IC Number digit length must be 12</value>
  </data>
  <data name="ValidNumericICNo" xml:space="preserve">
    <value>Entered IC Number must be number</value>
  </data>
  <data name="ValidNumericMobileNo" xml:space="preserve">
    <value>Entered Mobile Number must be number</value>
  </data>
  <data name="ValidNumericPostCode" xml:space="preserve">
    <value>Entered Postcode must be number</value>
  </data>
  <data name="ValidRequiredAddress" xml:space="preserve">
    <value>Please enter Address</value>
  </data>
  <data name="ValidRequiredCitizenshipId" xml:space="preserve">
    <value>Please select Citizenship</value>
  </data>
  <data name="ValidRequiredCity" xml:space="preserve">
    <value>Please enter City</value>
  </data>
  <data name="ValidRequiredCountryId" xml:space="preserve">
    <value>Please select Country</value>
  </data>
  <data name="ValidRequiredEmail" xml:space="preserve">
    <value>Please enter Email</value>
  </data>
  <data name="ValidRequiredICNo" xml:space="preserve">
    <value>Please enter IC Number</value>
  </data>
  <data name="ValidRequiredMobileNo" xml:space="preserve">
    <value>Please enter Mobile Number</value>
  </data>
  <data name="ValidRequiredName" xml:space="preserve">
    <value>Please enter Name</value>
  </data>
  <data name="ValidRequiredPassportNo" xml:space="preserve">
    <value>Please enter Passport Number</value>
  </data>
  <data name="ValidRequiredPassword" xml:space="preserve">
    <value>Please enter Password</value>
  </data>
  <data name="ValidRequiredPostCode" xml:space="preserve">
    <value>Please enter Postcode</value>
  </data>
  <data name="ValidRequiredRetypePassword" xml:space="preserve">
    <value>Please Retype Password</value>
  </data>
  <data name="ValidRequiredRole" xml:space="preserve">
    <value>Please select at least one Role</value>
  </data>
  <data name="ValidRequiredStateId" xml:space="preserve">
    <value>Please enter State</value>
  </data>
  <data name="ValidTypeEmail" xml:space="preserve">
    <value>Please enter a valid Email</value>
  </data>
</root>